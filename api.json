{
  "components": {
    "parameters": {
      "environmentKey": {
        "description": "The Environment identifier",
        "example": "production",
        "in": "path",
        "name": "environment_key",
        "required": true,
        "schema": { "type": "string" }
      },
      "experimentId": {
        "description": "Experiment Id",
        "example": 12345,
        "in": "path",
        "name": "experiment_id",
        "required": true,
        "schema": { "type": "integer" }
      },
      "flagId": {
        "description": "The Flag identifier",
        "example": 12345,
        "in": "path",
        "name": "flag_id",
        "required": true,
        "schema": { "type": "integer" }
      },
      "flagKey": {
        "description": "The Flag identifier",
        "example": "recurring_deposit",
        "in": "path",
        "name": "flag_key",
        "required": true,
        "schema": { "type": "string" }
      },
      "groupId": {
        "description": "The group identifier",
        "example": 54321,
        "in": "path",
        "name": "group_id",
        "required": true,
        "schema": { "type": "integer" }
      },
      "holdoutId": {
        "description": "The holdout identifier",
        "example": 54321,
        "in": "path",
        "name": "holdout_id",
        "required": true,
        "schema": { "type": "integer" }
      },
      "pageNumber": {
        "description": "Bypass page_token to jump to specific page",
        "in": "query",
        "name": "page_number",
        "schema": { "format": "int64", "type": "integer" }
      },
      "pageToken": {
        "description": "Pagination page token. Implements prev, next, last, first",
        "in": "query",
        "name": "page_token",
        "schema": { "type": "string" }
      },
      "pageWindow": {
        "description": "Number of previous and next page links to supply for the request (defaults to 1).",
        "in": "query",
        "name": "page_window",
        "schema": { "type": "integer" }
      },
      "perPage": {
        "description": "The max number of items to include per page or results.",
        "in": "query",
        "name": "per_page",
        "schema": { "format": "int64", "type": "integer" }
      },
      "projectId": {
        "description": "The project identifier",
        "example": 12345,
        "in": "path",
        "name": "project_id",
        "required": true,
        "schema": { "type": "integer" }
      },
      "reportKey": {
        "description": "The Report identifier. Get the key from the List Reports endpoint (key is not displayed in the Optimizely app)",
        "example": "paid_users_45633910",
        "in": "path",
        "name": "report_key",
        "required": true,
        "schema": { "type": "string" }
      },
      "ruleKey": {
        "description": "The Rule identifier",
        "example": "rule_key",
        "in": "path",
        "name": "rule_key",
        "required": true,
        "schema": { "type": "string" }
      },
      "variableDefinitionKey": {
        "description": "The Variable Definition identifier",
        "example": "my_str",
        "in": "path",
        "name": "variable_definition_key",
        "required": true,
        "schema": { "type": "string" }
      },
      "variationKey": {
        "description": "The Variation identifier",
        "example": "high_discount",
        "in": "path",
        "name": "variation_key",
        "required": true,
        "schema": { "type": "string" }
      }
    },
    "requestBodies": {
      "FlagRequest": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/FlagRequestBody" }
          }
        },
        "required": true
      },
      "GroupRequest": {
        "content": {
          "application/json": {
            "example": {
              "description": "Promo Group description",
              "environment_key": "production",
              "name": "Promo Group",
              "rules": { "123": { "traffic_allocation": 2500 } }
            },
            "schema": { "$ref": "#/components/schemas/GroupRequestBody" }
          }
        },
        "required": true
      },
      "HoldoutRequest": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/HoldoutRequestBody" }
          }
        },
        "required": true
      },
      "VariationRequest": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/VariationRequestBody" }
          }
        },
        "required": true
      }
    },
    "responses": {
      "BadRequestResponse": {
        "content": {
          "application/problem+json": {
            "example": {
              "detail": "Another entity already exists with this same key",
              "status": 400,
              "title": "Key example_entity already exists\"",
              "uuid": "42c4c855-42f2-4c9a-8544-37b3dff706d2"
            },
            "schema": { "$ref": "#/components/schemas/ProblemDetail" }
          }
        },
        "description": "Malformed requests and invalid parameter names and types"
      },
      "ChangeHistorySuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ChangeHistory" }
          }
        },
        "description": "Successful retrieval of query params for change history.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      },
      "ConflictResponse": {
        "content": {
          "application/problem+json": {
            "schema": { "$ref": "#/components/schemas/ProblemDetail" }
          }
        },
        "description": "Conflicting resource state with requested action"
      },
      "EnvironmentMapSuccessResponse": {
        "content": {
          "application/json": {
            "example": {
              "development": {
                "archived": false,
                "key": "development",
                "name": "Development",
                "priority": 2
              },
              "production": {
                "archived": false,
                "key": "production",
                "name": "Production",
                "priority": 1
              }
            },
            "schema": { "$ref": "#/components/schemas/EnvironmentMap" }
          }
        },
        "description": "Successful update of Environments.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      },
      "FlagSuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Flag" }
          }
        },
        "description": "Successful retrieval, creation or update of a Flag.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      },
      "ForbiddenResponse": {
        "content": {
          "application/problem+json": {
            "example": {
              "detail": "Permission denied",
              "status": 403,
              "title": "Forbidden"
            },
            "schema": { "$ref": "#/components/schemas/ProblemDetail" }
          }
        },
        "description": "Do not have permission to perform the operation"
      },
      "GroupSuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Group" }
          }
        },
        "description": "Successful retrieval, creation or update of a Group.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      },
      "HoldoutSuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Holdout" }
          }
        },
        "description": "Successful retrieval, creation or update of a Holdout.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      },
      "HoldoutsListSuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/HoldoutsList" }
          }
        },
        "description": "Successful retrieval of a list of holdouts.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      },
      "HoldoutsPaginatedListSuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/HoldoutsPaginatedList" }
          }
        },
        "description": "Successful retrieval of a list of holdouts.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      },
      "NoContentResponse": { "description": "No content in the response" },
      "NotFoundResponse": { "description": "Not found. No content" },
      "ReportSuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Report" }
          }
        },
        "description": "Successful retrieval of a Report.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      },
      "RuleSuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Rule" }
          }
        },
        "description": "Successful retrieval of a Rule.\n"
      },
      "RulesetSuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Ruleset" }
          }
        },
        "description": "Successful retrieval or update of a Ruleset.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      },
      "UnauthorizedResponse": {
        "content": {
          "application/problem+json": {
            "schema": { "$ref": "#/components/schemas/ProblemDetail" }
          }
        },
        "description": "Invalid credentials"
      },
      "UnprocessableEntityResponse": {
        "content": {
          "application/problem+json": {
            "schema": { "$ref": "#/components/schemas/ProblemDetail" }
          }
        },
        "description": "Missing required properties or unknown values for query parameters"
      },
      "VariationSuccessResponse": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Variation" }
          }
        },
        "description": "Successful retrieval, creation or update of a Variation for a Flag.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
      }
    },
    "schemas": {
      "AudienceConditions": {
        "description": "An Audience Combination composed of other audiences. Each audience is a rule like 'User likes salads', and an Audience Combination is a Boolean combination of these rules, like 'User likes pizza NOT (User likes salads AND User likes soup)'.",
        "oneOf": [
          { "$ref": "#/components/schemas/AudienceConditionsArray" },
          { "$ref": "#/components/schemas/AudienceConditionsString" }
        ]
      },
      "AudienceConditionsArray": {
        "example": [
          "or",
          { "audience_id": 123 },
          ["and", { "audience_id": 456 }, { "audience_id": 789 }]
        ],
        "items": {
          "anyOf": [
            {
              "description": "The logical operator to use (e.g. \"and\", \"or\", or \"not\"). This must be the first item in the audience_conditions array. The \"not\" operator may only be used in conjunction with a single condition or list.",
              "type": "string"
            },
            {
              "description": "An invidual conditional, consisting of a JSON object with an \"audience_id\" value.",
              "properties": { "audience_id": { "type": "integer" } },
              "required": ["audience_id"],
              "type": "object"
            },
            {
              "$ref": "#/components/schemas/AudienceConditionsArray",
              "description": "A nested AudienceConditionsArray",
              "example": [
                ["and", { "audience_id": 456 }, { "audience_id": 789 }]
              ]
            }
          ]
        },
        "type": "array"
      },
      "AudienceConditionsString": {
        "description": "A valid AudienceConditionsArray represented as a JSON string",
        "example": "[\n  \"or\",\n  {\n    \"audience_id\": 1038980040\n  },\n  {\n    \"audience_id\": 1033280055\n  },\n  [\n    \"not\",\n    {\n      \"audience_id\": 1120870079\n    }\n  ]\n]",
        "type": "string"
      },
      "BrainstormError": {
        "properties": {
          "id": { "type": "string" },
          "message": { "type": "string" },
          "type": { "type": "string" }
        },
        "required": ["message", "type", "id"],
        "type": "object"
      },
      "BrainstormUserChat": {
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" },
          "user_chat": { "type": "string" }
        },
        "required": ["user_chat", "type"],
        "type": "object"
      },
      "BrainstormVariableDefinition": {
        "properties": {
          "default_value": {
            "description": "The default value for the variable.",
            "type": "string"
          },
          "description": {
            "description": "Additional context of the Flag Variable Definition",
            "type": "string"
          },
          "key": {
            "description": "Unique identifier for the variable.",
            "type": "string"
          },
          "type": {
            "description": "The data type of the variable.",
            "enum": ["integer", "string", "boolean", "double", "json"],
            "type": "string"
          }
        },
        "required": ["key", "type", "default_value", "description"],
        "type": "object"
      },
      "BrainstormVariablesChat": {
        "properties": {
          "interactions": {
            "description": "A list of interactions including user chats and responses",
            "items": {
              "$ref": "#/components/schemas/BrainstormVariablesInteraction"
            },
            "type": "array"
          }
        },
        "required": ["interactions"],
        "type": "object"
      },
      "BrainstormVariablesInteraction": {
        "discriminator": {
          "mapping": {
            "error": "#/components/schemas/BrainstormError",
            "response": "#/components/schemas/BrainstormVariablesResponse",
            "user_chat": "#/components/schemas/BrainstormUserChat"
          },
          "propertyName": "type"
        },
        "type": "object"
      },
      "BrainstormVariablesResponse": {
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" },
          "variables": {
            "items": {
              "$ref": "#/components/schemas/BrainstormVariableDefinition"
            },
            "type": "array"
          }
        },
        "required": ["variables", "type", "id"],
        "type": "object"
      },
      "BrainstormVariation": {
        "properties": {
          "description": {
            "description": "Additional context of the Variation",
            "type": "string"
          },
          "key": {
            "description": "Unique identifier for the variation.",
            "type": "string"
          },
          "name": { "description": "Name of the variation.", "type": "string" },
          "variables": {
            "additionalProperties": {
              "properties": {
                "key": { "type": "string" },
                "type": { "type": "string" },
                "value": { "type": "string" }
              },
              "type": "object"
            },
            "default": {},
            "type": "object"
          }
        },
        "required": ["key", "name", "description", "variables"],
        "type": "object"
      },
      "BrainstormVariationsChat": {
        "properties": {
          "interactions": {
            "description": "A list of interactions including user chats and responses",
            "items": {
              "$ref": "#/components/schemas/BrainstormVariablesInteraction"
            },
            "type": "array"
          }
        },
        "required": ["interactions"],
        "type": "object"
      },
      "BrainstormVariationsInteraction": {
        "discriminator": {
          "mapping": {
            "error": "#/components/schemas/BrainstormError",
            "response": "#/components/schemas/BrainstormVariationsResponse",
            "user_chat": "#/components/schemas/BrainstormUserChat"
          },
          "propertyName": "type"
        },
        "type": "object"
      },
      "BrainstormVariationsResponse": {
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" },
          "variations": {
            "items": { "$ref": "#/components/schemas/BrainstormVariation" },
            "type": "array"
          }
        },
        "required": ["variations", "type", "id"],
        "type": "object"
      },
      "BulkOperationsRequestBody": {
        "properties": {
          "keys": {
            "description": "The list of resource keys to perform the desired operation",
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ChangeHistory": {
        "items": {
          "properties": {
            "entity_ids": {
              "description": "Array of entity IDs",
              "items": {
                "anyOf": [{ "type": "integer" }, { "type": "string" }]
              },
              "type": "array"
            },
            "entity_type": {
              "description": "Flag Key",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "Environment": {
        "properties": {
          "account_id": {
            "description": "The ID of the Account",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "archived": { "example": false, "type": "boolean" },
          "id": {
            "description": "The ID of the Environment",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "key": {
            "description": "User-facing key to identify this Environment.",
            "example": "production",
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "type": "string"
          },
          "name": {
            "description": "Name of the Environment.",
            "example": "Production",
            "type": "string"
          },
          "priority": {
            "description": "Integer representing the priority of the Environment. This is used for ordering in the UI.",
            "example": 1,
            "type": "integer"
          },
          "project_id": {
            "description": "The ID of the Project this Flag belongs to",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "role": {
            "description": "Granular permission role",
            "example": "admin",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["key", "name", "archived", "priority", "project_id"],
        "type": "object"
      },
      "EnvironmentMap": {
        "additionalProperties": { "$ref": "#/components/schemas/Environment" },
        "description": "Map of environments that include environment key as key and environment payload as value.",
        "type": "object"
      },
      "Environments": {
        "properties": {
          "count": {
            "description": "Number of Environments on the current page.",
            "example": 2,
            "type": "integer"
          },
          "filter_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Url template like '.../{?filter}'",
            "example": "/projects/123/environments?archived=false"
          },
          "first_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to first page of Environments in a series.",
            "example": "/projects/123/environments?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#1"
          },
          "items": {
            "items": { "$ref": "#/components/schemas/Environment" },
            "type": "array"
          },
          "last_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the last page of Environments in a series.",
            "example": "/projects/123/environments?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#10"
          },
          "next_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to next pages of Environments in a series.\n\n The first element in the array is the exact next page after the current record, etc.\n",
            "example": [
              "/projects/123/environments?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#6",
              "/projects/123/environments?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#7"
            ]
          },
          "page": {
            "description": "Number of the current page. 1-index based.",
            "example": 5,
            "type": "integer"
          },
          "prev_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to previous pages of Environments in a series.\n\nThe first element in the array is the exact previous page before the current record, etc.\n",
            "example": [
              "/projects/123/environments?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#4",
              "/projects/123/environments?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#3"
            ]
          },
          "reset_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default pages of Environments",
            "example": "..."
          },
          "total_count": {
            "description": "Total number of Environments for this series.",
            "example": 20,
            "type": "integer"
          },
          "total_pages": {
            "description": "Total number of pages for this series.",
            "example": 10,
            "type": "integer"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self"
          }
        },
        "required": [
          "url",
          "first_url",
          "last_url",
          "count",
          "page",
          "total_count",
          "total_pages",
          "items"
        ],
        "type": "object"
      },
      "EventPropertyCondition": {
        "properties": {
          "name": { "type": "string" },
          "operator": {
            "enum": [
              "equal_to",
              "not_equal_to",
              "greater_than",
              "greater_than_or_equal_to",
              "less_than",
              "less_than_or_equal_to",
              "contains",
              "does_not_contain"
            ],
            "type": "string"
          },
          "type": { "enum": ["string", "number", "boolean"], "type": "string" },
          "value": { "type": "string" }
        },
        "required": ["name", "type", "value", "operator"],
        "type": "object"
      },
      "Flag": {
        "example": {
          "account_id": 12345,
          "archive_url": "...",
          "archived": false,
          "created_by_user_id": "testuser@optimizely.com",
          "created_time": "2019-05-08T00:00:00.000Z",
          "delete_url": "string",
          "description": "Flag used for driving customers to use recurring deposits by showing a graph of compound interest over time",
          "environments": {
            "development": {
              "disable_url": "...",
              "enable_url": "...",
              "enabled": false,
              "key": "development",
              "name": "Development",
              "priority": 2,
              "rules_summary": [
                {
                  "audience_ids": [1],
                  "created_time": "2022-01-08T00:00:00.000Z",
                  "days_running": 30,
                  "enabled": true,
                  "key": "a/b",
                  "name": "A/B Test",
                  "primary_metric": "conversion_rate",
                  "traffic_allocation": 100,
                  "type": "experiment",
                  "updated_time": "2022-01-08T00:00:00.000Z"
                }
              ]
            },
            "production": {
              "disable_url": "...",
              "enable_url": "...",
              "enabled": false,
              "key": "production",
              "name": "Production",
              "priority": 1,
              "rules_detail": [
                {
                  "audience_ids": [1],
                  "created_time": "2022-01-08T00:00:00.000Z",
                  "days_running": 30,
                  "enabled": true,
                  "id": 123,
                  "key": "a/b",
                  "name": "A/B Test",
                  "primary_metric": "conversion_rate",
                  "traffic_allocation": 100,
                  "type": "experiment",
                  "updated_time": "2022-01-08T00:00:00.000Z"
                }
              ],
              "rules_summary": {
                "a/b": { "keys": ["new_users"] },
                "targeted_delivery": { "keys": ["paid_users", "trial_users"] }
              }
            }
          },
          "id": 45633994,
          "key": "recurring_deposit",
          "name": "Recurring Deposit",
          "outlier_filtering_enabled": false,
          "project_id": 12345,
          "revision": 1,
          "unarchive_url": "...",
          "update_url": "...",
          "updated_time": "2019-05-08T00:00:00.000Z",
          "url": "...",
          "urn": "flags.flag.optimizely.com::asdfsdf-2344-efadf03-343434-efrrr",
          "variable_definitions": {
            "advanced": {
              "default_value": "{\n\t\"hello\": 123\n}",
              "description": "This variable is used to configure the advanced used for advanced purposes",
              "key": "advanced",
              "type": "json"
            },
            "amount": {
              "default_value": "0.0",
              "description": "This variable is used to configure the amount used for computing the discount",
              "key": "amount",
              "type": "double"
            },
            "message": {
              "default_value": "Use recurring deposits to compound interest",
              "description": "This variable is used to configure the message used for displaying the discount",
              "key": "message",
              "type": "string"
            }
          }
        },
        "properties": {
          "account_id": {
            "description": "The ID of the Account this Flag belongs to",
            "format": "int64",
            "type": "integer"
          },
          "archive_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "example": "...",
            "readOnly": true
          },
          "archived": { "example": false, "type": "boolean" },
          "created_by_user_email": {
            "example": "testuser@optimizely.com",
            "readOnly": true,
            "type": "string"
          },
          "created_time": {
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "delete_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "readOnly": true
          },
          "description": {
            "example": "Flag used for driving customers to use recurring deposits by showing a graph of compound interest over time",
            "type": "string"
          },
          "environments": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FlagEnvironment"
            },
            "readOnly": true,
            "type": "object"
          },
          "id": { "example": 45633994, "readOnly": true, "type": "integer" },
          "key": { "example": "recurring_deposit", "type": "string" },
          "name": { "example": "Recurring Deposit", "type": "string" },
          "outlier_filtering_enabled": {
            "default": false,
            "example": false,
            "type": "boolean"
          },
          "project_id": {
            "description": "The ID of the Project this Flag belongs to",
            "format": "int64",
            "type": "integer"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "role": {
            "description": "Granular permission role",
            "example": "admin",
            "readOnly": true,
            "type": "string"
          },
          "unarchive_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "example": "...",
            "readOnly": true
          },
          "update_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "example": "...",
            "readOnly": true
          },
          "updated_time": {
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self",
            "example": "...",
            "readOnly": true
          },
          "urn": {
            "description": "The URN for the Flag",
            "example": "flags.flag.optimizely.com::asdfsdf-2344-efadf03-343434-efrrr",
            "readOnly": true,
            "type": "string"
          },
          "variable_definitions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/VariableDefinition"
            },
            "default": {},
            "type": "object"
          }
        },
        "required": [
          "id",
          "urn",
          "key",
          "name",
          "created_time",
          "updated_time",
          "environments",
          "url"
        ],
        "type": "object"
      },
      "FlagEnvironment": {
        "properties": {
          "created_time": {
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "disable_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to disable this flag in the environment",
            "example": "...",
            "readOnly": true
          },
          "enable_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to enable this flag in the environment",
            "example": "...",
            "readOnly": true
          },
          "enabled": { "example": false, "type": "boolean" },
          "has_restricted_permissions": { "example": false, "type": "boolean" },
          "id": {
            "description": "The ID of the Environment",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "key": { "example": "production", "type": "string" },
          "name": { "example": "Production\"", "type": "string" },
          "priority": {
            "description": "Integer representing the priority of the Environment. This is used for ordering in the UI.",
            "example": 1,
            "type": "integer"
          },
          "rules_detail": {
            "items": { "$ref": "#/components/schemas/RuleDetails" },
            "type": "array"
          },
          "rules_summary": {
            "additionalProperties": {
              "$ref": "#/components/schemas/RulesetSummary"
            },
            "description": "Map of rules that include rule type as key and summary as value",
            "type": "object"
          },
          "status": {
            "description": "Status of the Flag",
            "example": "draft",
            "type": "string"
          }
        },
        "required": ["name", "key", "priority"],
        "type": "object"
      },
      "FlagMap": {
        "additionalProperties": { "$ref": "#/components/schemas/Flag" },
        "description": "Map of flags that include flag key as key and flag payload as value.",
        "type": "object"
      },
      "FlagRequestBody": {
        "properties": {
          "description": {
            "example": "Flag used for driving customers to use recurring deposits by showing a graph of compound interest over time",
            "type": "string"
          },
          "key": { "example": "recurring_deposit", "type": "string" },
          "name": { "example": "Recurring Deposit", "type": "string" },
          "outlier_filtering_enabled": {
            "default": false,
            "example": false,
            "type": "boolean"
          },
          "variable_definitions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/VariableDefinition"
            },
            "example": {
              "advanced": {
                "default_value": "{\n\t\"hello\": 123\n}",
                "description": "This variable is used to configure the advanced used for advanced purposes",
                "key": "advanced",
                "type": "json"
              },
              "amount": {
                "default_value": "0.0",
                "description": "This variable is used to configure the amount used for computing the discount",
                "key": "amount",
                "type": "double"
              },
              "message": {
                "default_value": "Use recurring deposits to compound interest",
                "description": "This variable is used to configure the message used for displaying the discount",
                "key": "message",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "required": ["key"],
        "type": "object"
      },
      "Flags": {
        "properties": {
          "count": {
            "description": "Number of Flags on the current page.",
            "example": 2,
            "type": "integer"
          },
          "create_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }]
          },
          "fetch_flag_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "A url template to be used to find a particular Flag.\n"
          },
          "filter_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Url template like '.../{?filter}'"
          },
          "first_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to first page of Flags in a series.",
            "example": "/projects/123/flags?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#1"
          },
          "items": {
            "items": { "$ref": "#/components/schemas/Flag" },
            "type": "array"
          },
          "last_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the last page of Flags in a series.",
            "example": "/projects/123/flags?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#10"
          },
          "next_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to next pages of Flags in a series.\n\n The first element in the array is the exact next page after the current record, etc.\n",
            "example": [
              "/projects/123/flags?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#6",
              "/projects/123/flags?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#7"
            ]
          },
          "page": {
            "description": "Number of the current page. 1-index based.",
            "example": 5,
            "type": "integer"
          },
          "prev_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to previous pages of Flags in a series.\n\nThe first element in the array is the exact previous page before the current record, etc.\n",
            "example": [
              "/projects/123/flags?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#4",
              "/projects/123/flags?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#3"
            ]
          },
          "reset_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default pages of Flags",
            "example": "..."
          },
          "sort_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Url template like '.../{?sort}'"
          },
          "total_count": {
            "description": "Total number of Flags for this series.",
            "example": 20,
            "type": "integer"
          },
          "total_pages": {
            "description": "Total number of pages for this series.",
            "example": 10,
            "type": "integer"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self"
          }
        },
        "required": [
          "url",
          "first_url",
          "last_url",
          "count",
          "page",
          "total_count",
          "total_pages",
          "items"
        ],
        "type": "object"
      },
      "Group": {
        "example": {
          "archive_url": "/projects/12345/groups/archived",
          "archived": false,
          "created_time": "2019-05-08T00:00:00.000Z",
          "description": "Promo group description",
          "environment_key": "production",
          "id": 1,
          "name": "Promo group",
          "project_id": 12345,
          "revision": 1,
          "role": "viewer",
          "rules": {
            "321": {
              "created_time": "2022-01-08T00:00:00.000Z",
              "flag_key": "recurring_revenue",
              "flag_name": "Recurring REvenue",
              "flag_status": "unarchived",
              "rule_key": "experiment_one",
              "rule_name": "Experiment One",
              "traffic_allocation": 2000,
              "updated_time": "2022-01-08T00:00:00.000Z"
            }
          },
          "unarchive_url": "/projects/12345/groups/unarchived",
          "update_url": "/projects/12345/groups",
          "updated_time": "2019-05-08T00:00:00.000Z",
          "url": "/projects/12345/groups/123",
          "urn": "groups.flag.optimizely.com::1"
        },
        "properties": {
          "archive_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "example": "...",
            "readOnly": true
          },
          "archived": { "example": false, "type": "boolean" },
          "created_time": {
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "delete_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "readOnly": true
          },
          "description": { "example": "promotion group", "type": "string" },
          "environment_key": {
            "example": "production",
            "minLength": 1,
            "type": "string"
          },
          "id": { "example": 1, "readOnly": true, "type": "integer" },
          "name": { "example": "PromoGroup", "type": "string" },
          "project_id": {
            "description": "The ID of the Project this Group belongs to",
            "format": "int64",
            "type": "integer"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "role": {
            "description": "Granular permission role",
            "example": "admin",
            "readOnly": true,
            "type": "string"
          },
          "rules": {
            "allOf": [{ "$ref": "#/components/schemas/GroupRuleMap" }]
          },
          "unarchive_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "example": "...",
            "readOnly": true
          },
          "update_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "example": "...",
            "readOnly": true
          },
          "updated_time": {
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self",
            "example": "...",
            "readOnly": true
          },
          "urn": {
            "description": "The URN for the Group",
            "example": "groups.flag.optimizely.com::1",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "urn",
          "name",
          "environment_key",
          "created_time",
          "updated_time"
        ],
        "type": "object"
      },
      "GroupMap": {
        "additionalProperties": { "$ref": "#/components/schemas/Group" },
        "description": "Map of groups that include group id as key and group payload as value.",
        "type": "object"
      },
      "GroupRequestBody": {
        "properties": {
          "description": { "example": "promotion group", "type": "string" },
          "environment_key": { "example": "production", "type": "string" },
          "name": {
            "example": "PromoGroup",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "rules": {
            "allOf": [{ "$ref": "#/components/schemas/GroupRuleMap" }]
          }
        },
        "required": ["name", "environment_key"],
        "type": "object"
      },
      "GroupRule": {
        "example": { "traffic_allocation": 5000 },
        "properties": {
          "flag_key": {
            "description": "The Key of the Flag this GroupRule is related",
            "example": "flag_key",
            "readOnly": true,
            "type": "string"
          },
          "flag_name": {
            "description": "The name of the Flag this GroupRule is related to.",
            "example": "A Feature Flag",
            "readOnly": true,
            "type": "string"
          },
          "flag_status": {
            "description": "Status of the Flag thie GroupRule is related",
            "enum": ["archived", "unarchived"],
            "example": "archived",
            "readOnly": true,
            "type": "string"
          },
          "rule_enabled": {
            "description": "If the underlying Rule and Ruleset are both enabled",
            "example": true,
            "readOnly": true,
            "type": "boolean"
          },
          "rule_key": {
            "description": "The Key of the Rule this GroupRule belongs to",
            "example": "paid_users",
            "readOnly": true,
            "type": "string"
          },
          "rule_name": {
            "description": "The Name of the Rule this GroupRule belongs to",
            "example": "Paid Users",
            "readOnly": true,
            "type": "string"
          },
          "rule_status": {
            "description": "The status of the rule",
            "example": "draft",
            "readOnly": true,
            "type": "string"
          },
          "traffic_allocation": {
            "description": "The traffic allocation for the Rule",
            "example": 2000,
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": ["traffic_allocation"],
        "type": "object"
      },
      "GroupRuleMap": {
        "additionalProperties": { "$ref": "#/components/schemas/GroupRule" },
        "description": "Map of group rules that include rule id as key and group rule as value.",
        "type": "object"
      },
      "Groups": {
        "properties": {
          "count": {
            "description": "Number of Groups on the current page.",
            "example": 2,
            "type": "integer"
          },
          "create_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }]
          },
          "filter_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Url template like '.../{?filter}'"
          },
          "first_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to first page of Groups in a series.",
            "example": "/projects/123/groups?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#1"
          },
          "items": {
            "items": { "$ref": "#/components/schemas/Group" },
            "type": "array"
          },
          "last_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the last page of Groups in a series.",
            "example": "/projects/123/groups?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#10"
          },
          "next_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to next pages of Groups in a series.\n\n The first element in the array is the exact next page after the current record, etc.\n",
            "example": [
              "/projects/123/groups?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#6",
              "/projects/123/groups?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#7"
            ]
          },
          "page": {
            "description": "Number of the current page. 1-index based.",
            "example": 5,
            "type": "integer"
          },
          "prev_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to previous pages of Groups in a series.\n\nThe first element in the array is the exact previous page before the current record, etc.\n",
            "example": [
              "/projects/123/groups?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#4",
              "/projects/123/groups?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#3"
            ]
          },
          "reset_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default pages of Groups",
            "example": "..."
          },
          "sort_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Url template like '.../{?sort}'"
          },
          "total_count": {
            "description": "Total number of Groups for this series.",
            "example": 20,
            "type": "integer"
          },
          "total_pages": {
            "description": "Total number of pages for this series.",
            "example": 10,
            "type": "integer"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self"
          }
        },
        "required": [
          "url",
          "first_url",
          "last_url",
          "count",
          "page",
          "total_count",
          "total_pages",
          "items"
        ],
        "type": "object"
      },
      "Holdout": {
        "example": {
          "description": "Control holdout group for testing",
          "id": 1,
          "name": "Holdout",
          "revision": 1,
          "urn": "holdout.flag.optimizely.com::1"
        },
        "properties": {
          "archived": { "example": false, "type": "boolean" },
          "audience_conditions": {
            "description": "The audiences that should see this holdout. To target everyone, use the string \"everyone\" or omit this field. Multiple audiences can be combined with \"and\" or \"or\" using the same structure as audience conditions.",
            "externalDocs": {
              "description": "same structure as audience conditions",
              "url": "https://developers.optimizely.com/x/rest/guides/conditions/"
            },
            "items": { "example": ["or", { "audience_id": 5340810295 }] },
            "type": "array"
          },
          "audience_ids": {
            "example": [1, 2, 3],
            "items": { "type": "integer" },
            "type": "array"
          },
          "created_by_user_email": {
            "example": "testuser@optimizely.com",
            "readOnly": true,
            "type": "string"
          },
          "created_time": {
            "description": "Timestamp when the Holdout is created",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Additional context of the Holdout",
            "type": "string"
          },
          "end_time": {
            "description": "Timestamp until when the Holdout finished",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "environment_key": { "example": "production", "type": "string" },
          "id": { "example": 1, "readOnly": true, "type": "integer" },
          "key": { "example": "yearly_holdout", "type": "string" },
          "metrics": {
            "description": "List of metrics that are evaluated for the holdout.",
            "items": { "$ref": "#/components/schemas/Metric" },
            "type": "array"
          },
          "name": {
            "description": "User-facing name of the Holdout",
            "type": "string"
          },
          "project_id": {
            "description": "The ID of the Project this Group belongs to",
            "format": "int64",
            "type": "integer"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "scope": {
            "description": "The scope of the Holdout (global/local)",
            "type": "string"
          },
          "scope_type": {
            "description": "The scope type of the Holdout (include/exclude)",
            "type": "string"
          },
          "start_time": {
            "description": "Timestamp from when the Holdout is computed",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of holdout",
            "example": "Running",
            "type": "string"
          },
          "traffic_allocation": {
            "description": "The traffic allocation for the Holdout",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "updated_time": {
            "description": "Timestamp until when holdout was last updated",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["id", "name"],
        "type": "object"
      },
      "HoldoutMap": {
        "additionalProperties": { "$ref": "#/components/schemas/Holdout" },
        "description": "Map of holdouts that include holdout id as key and holdout payload as value.",
        "type": "object"
      },
      "HoldoutRequestBody": {
        "properties": {
          "archived": { "example": false, "type": "boolean" },
          "audience_conditions": {
            "description": "The audiences that should see this holdout. To target everyone, use the string \"everyone\" or omit this field. Multiple audiences can be combined with \"and\" or \"or\" using the same structure as audience conditions.",
            "externalDocs": {
              "description": "same structure as audience conditions",
              "url": "https://developers.optimizely.com/x/rest/guides/conditions/"
            },
            "items": { "example": ["or", { "audience_id": 5340810295 }] },
            "type": "array"
          },
          "audience_ids": {
            "example": [1, 2, 3],
            "items": { "type": "integer" },
            "type": "array"
          },
          "created_by_user_email": {
            "example": "testuser@optimizely.com",
            "readOnly": true,
            "type": "string"
          },
          "created_time": {
            "description": "Timestamp when the Holdout is created",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Additional context of the Holdout",
            "type": "string"
          },
          "end_time": {
            "description": "Timestamp until when the Holdout finished",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "environment_key": {
            "description": "The key for the environment this Holdout covers.",
            "example": "production",
            "type": "string"
          },
          "id": { "example": 1, "readOnly": true, "type": "integer" },
          "key": { "example": "annual_holdout", "type": "string" },
          "metrics": {
            "description": "List of metrics that are evaluated for the holdout.",
            "items": { "$ref": "#/components/schemas/Metric" },
            "type": "array"
          },
          "name": {
            "description": "User-facing name of the Holdout",
            "type": "string"
          },
          "project_id": {
            "description": "The ID of the Project this Group belongs to",
            "format": "int64",
            "type": "integer"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "scope": {
            "description": "The scope of the Holdout (global/local)",
            "type": "string"
          },
          "scope_type": {
            "description": "The scope type of the Holdout (include/exclude)",
            "type": "string"
          },
          "start_time": {
            "description": "Timestamp from when the Holdout is computed",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of holdout",
            "enum": ["draft", "running", "concluded"],
            "example": "Running",
            "type": "string"
          },
          "traffic_allocation": {
            "description": "The traffic allocation for the Holdout",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "updated_time": {
            "description": "Timestamp until when holdout was last updated",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["key", "name"],
        "type": "object"
      },
      "HoldoutsList": {
        "items": { "$ref": "#/components/schemas/Holdout" },
        "type": "array"
      },
      "HoldoutsPaginatedList": {
        "properties": {
          "count": {
            "description": "Number of Holdouts on the current page.",
            "example": 2,
            "type": "integer"
          },
          "filter_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Url template like '.../{?filter}'",
            "example": "/projects/123/holdouts?archived=false"
          },
          "first_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to first page of Holdouts in a series.",
            "example": "/projects/123/holdouts?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#1"
          },
          "items": {
            "items": { "$ref": "#/components/schemas/Holdout" },
            "type": "array"
          },
          "last_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the last page of Holdouts in a series.",
            "example": "/projects/123/holdouts?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#10"
          },
          "next_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to next pages of Holdouts in a series.\n\n The first element in the array is the exact next page after the current record, etc.\n",
            "example": [
              "/projects/123/holdouts?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#6",
              "/projects/123/holdouts?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#7"
            ]
          },
          "page": {
            "description": "Number of the current page. 1-index based.",
            "example": 5,
            "type": "integer"
          },
          "prev_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to previous pages of Holdouts in a series.\n\nThe first element in the array is the exact previous page before the current record, etc.\n",
            "example": [
              "/projects/123/holdouts?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#4",
              "/projects/123/holdouts?page_token=gASVCQAAAAAAAACMBTF8MnwylC4%3D#3"
            ]
          },
          "reset_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default pages of Holdouts",
            "example": "..."
          },
          "total_count": {
            "description": "Total number of Holdouts for this series.",
            "example": 20,
            "type": "integer"
          },
          "total_pages": {
            "description": "Total number of pages for this series.",
            "example": 10,
            "type": "integer"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self"
          }
        },
        "required": ["items", "first_url", "last_url", "page", "total_pages"],
        "type": "object"
      },
      "Metric": {
        "properties": {
          "aggregator": {
            "description": "The aggregation function for the numerator of the metric. 'unique' measures the number of unique visitors/sessions that include the specified Event. 'count' measures the total number of occurrences of Event for the scope (visitor/session). 'sum' is the sum of the 'field' value",
            "enum": ["unique", "count", "sum"],
            "type": "string"
          },
          "display_title": {
            "description": "An optional title for the unique metric configuration. If not provided, the event name will be used.",
            "type": "string"
          },
          "display_unit": {
            "description": "An optional name for the unit of the unique metric configuration.",
            "type": "string"
          },
          "event_id": {
            "description": "The ID for the Event to select data from. Omitted for global metrics that are not relative to a specific Event, i.e. \"overall revenue\"",
            "example": 32334454244,
            "format": "int64",
            "type": "integer"
          },
          "event_properties": {
            "properties": {
              "filter": {
                "properties": {
                  "combine_operator": {
                    "enum": ["or", "and"],
                    "type": "string"
                  },
                  "conditions": {
                    "items": {
                      "$ref": "#/components/schemas/EventPropertyCondition"
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "event_type": { "type": "string" },
          "field": {
            "description": "The field to aggregate for the numerator of the metric. Required when 'aggregator' = 'sum', otherwise omitted",
            "enum": ["revenue", "value"],
            "type": "string"
          },
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/SubMetric",
              "type": "object"
            },
            "type": "array"
          },
          "scope": {
            "description": "Specifies how Events should be grouped together. Can also be thought of as the denonimator of the metric. 'session' divides by the number of sessions. \"Influenced sessions\", or sessions that do not contain a decision Event but carry a decision from a previous session are not included in counts for numerator or denominator. 'visitor' divides by the number of visitors. 'event' divides by the total occurrences (impressions) of the specified Event",
            "enum": ["session", "visitor", "event"],
            "type": "string"
          },
          "winning_direction": {
            "description": "The winning direction of this metric",
            "enum": ["increasing", "decreasing"],
            "type": "string"
          }
        },
        "required": ["winning_direction", "aggregator"],
        "type": "object"
      },
      "PatchRequestBody": {
        "description": "A JSONPatch document as defined by RFC 6902",
        "properties": {
          "from": {
            "description": "A JSON Pointer to the resource attribute",
            "type": "string"
          },
          "op": {
            "description": "The operation to be performed",
            "enum": ["add", "remove", "replace", "move", "copy", "test"],
            "type": "string"
          },
          "path": {
            "description": "A JSON-Pointer to the resource or the resource attribute",
            "type": "string"
          },
          "value": {
            "anyOf": [
              { "type": "object" },
              { "items": { "type": "string" }, "type": "array" },
              { "$ref": "#/components/schemas/AudienceConditions" },
              { "type": "string" },
              { "type": "integer" },
              { "type": "boolean" },
              {
                "items": { "$ref": "#/components/schemas/SubMetric" },
                "type": "array"
              }
            ],
            "description": "The value to be used within the operations."
          }
        },
        "required": ["op", "path"],
        "type": "object"
      },
      "ProblemDetail": {
        "additionalProperties": true,
        "description": "https://tools.ietf.org/html/rfc7807#section-3.1",
        "properties": {
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          },
          "status": {
            "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type.",
            "type": "string"
          },
          "type": {
            "description": "A URI reference [RFC3986] that identifies the problem type. Contains 'about:blank' if unspecified.",
            "type": "string"
          },
          "uuid": {
            "description": "Error reference for customer support",
            "type": "string"
          }
        },
        "required": ["detail", "status", "title", "type"],
        "type": "object"
      },
      "Report": {
        "description": "Report with results for the active rule for a flag in a project.",
        "properties": {
          "archive_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to archive this Report",
            "example": "...",
            "readOnly": true
          },
          "archived": {
            "description": "Indicates if the Report is archived or not",
            "example": false,
            "type": "boolean"
          },
          "created_time": {
            "description": "Timestamp when the Report is created",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "delete_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to delete this Report",
            "example": "...",
            "readOnly": true
          },
          "description": {
            "description": "Additional context of the Report",
            "example": "Detailed context about the report is here.",
            "type": "string"
          },
          "distribution_mode": {
            "description": "Type of rule distribution",
            "enum": ["manual", "stats_accelerator"],
            "readOnly": true,
            "type": "string"
          },
          "end_time": {
            "description": "Timestamp until when the Report is computed",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "fetch_flag_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to flag url to which this report belongs to",
            "example": "...",
            "readOnly": true
          },
          "fetch_results_api_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the results API associated with this Report",
            "example": "...",
            "readOnly": true
          },
          "fetch_results_ui_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the results UI associated with this Report",
            "example": "...",
            "readOnly": true
          },
          "flag_key": {
            "description": "The Key of the Flag this report belongs to",
            "example": "recurring_deposit",
            "readOnly": true,
            "type": "string"
          },
          "flag_name": {
            "description": "The Name of the Flag this report belongs to",
            "example": "Recurring Deposit",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "System generated Unique ID of the Report",
            "example": 45633910,
            "readOnly": true,
            "type": "integer"
          },
          "key": {
            "description": "User-facing Unique identifier of the Report. Same as rule key with report ID appended.",
            "example": "paid_users-45633910",
            "readOnly": true,
            "type": "string"
          },
          "layer_experiment_id": {
            "description": "Experiment ID or Layer Experiment of a rule",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "User-facing name of the Report. Same as rule name.",
            "example": "Paid Users",
            "type": "string"
          },
          "primary_metric": {
            "description": "The first metric in the list of metrics.",
            "example": "conversion_rate",
            "readOnly": true,
            "type": "string"
          },
          "reset_results_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to reset results associated with this Report",
            "example": "...",
            "readOnly": true
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "role": {
            "description": "Granular permission role",
            "example": "admin",
            "readOnly": true,
            "type": "string"
          },
          "rule_description": {
            "description": "The description of the Rule this report belongs to",
            "example": "Paid Users description",
            "readOnly": true,
            "type": "string"
          },
          "rule_key": {
            "description": "The Key of the Rule this report belongs to",
            "example": "paid_users",
            "readOnly": true,
            "type": "string"
          },
          "rule_name": {
            "description": "The Name of the Rule this report belongs to",
            "example": "Paid Users",
            "readOnly": true,
            "type": "string"
          },
          "rule_state": {
            "description": "State of the Rule this report belong to",
            "example": "deleted",
            "readOnly": true,
            "type": "string"
          },
          "start_time": {
            "description": "Timestamp from when the Report is computed",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Type of report.",
            "enum": ["a/b", "multi_armed_bandit"],
            "example": "a/b",
            "readOnly": true,
            "type": "string"
          },
          "unarchive_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to unarchive this Report",
            "example": "...",
            "readOnly": true
          },
          "updated_time": {
            "description": "Timestamp when the Report is last updated",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self",
            "example": "...",
            "readOnly": true
          },
          "urn": {
            "description": "The URN for the Report",
            "example": "reports.flag.optimizely.com::45633910",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "urn",
          "key",
          "name",
          "flag_key",
          "rule_key",
          "type",
          "created_time",
          "updated_time",
          "url"
        ],
        "type": "object"
      },
      "ReportMap": {
        "additionalProperties": { "$ref": "#/components/schemas/Report" },
        "description": "Map of reports that include report key as key and report payload as value.",
        "type": "object"
      },
      "Reports": {
        "description": "Summary of the Reports for Flags in a project",
        "properties": {
          "count": {
            "description": "Number of Reports on the current page.",
            "example": 1,
            "type": "integer"
          },
          "fetch_report_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "A url template to be used to find a particular Report.\n",
            "example": "..."
          },
          "filter_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default page of Reports with filter '.../{?filter}'",
            "example": "..."
          },
          "first_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to first page of Reports in a series.",
            "example": "..."
          },
          "items": {
            "items": { "$ref": "#/components/schemas/Report" },
            "type": "array"
          },
          "last_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the last page of Reports in a series.",
            "example": "..."
          },
          "next_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to next pages of Reports in a series.\n\n The first element in the array is the exact next page after the current record, etc.\n",
            "example": "..."
          },
          "page": {
            "description": "Number of the current page. 1-index based.",
            "example": 1,
            "type": "integer"
          },
          "prev_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to previous pages of Reports in a series.\n\nThe first element in the array is the exact previous page before the current record, etc.\n",
            "example": "..."
          },
          "reset_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default page of Reports",
            "example": "..."
          },
          "sort_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default page of Reports with sort '.../{?sort}'",
            "example": "..."
          },
          "total_count": {
            "description": "Total number of Reports.",
            "example": 1,
            "type": "integer"
          },
          "total_pages": {
            "description": "Total number of pages for this series.",
            "example": 1,
            "type": "integer"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self",
            "example": "..."
          }
        },
        "required": [
          "url",
          "first_url",
          "last_url",
          "count",
          "page",
          "total_count",
          "total_pages",
          "items"
        ],
        "type": "object"
      },
      "Rule": {
        "description": "Configuration which contains audiences, metrics and variations.",
        "discriminator": {
          "mapping": {
            "a/b": "#/components/schemas/RuleVariation",
            "contextual_multi_armed_bandit": "#/components/schemas/RuleVariationCMAB",
            "multi_armed_bandit": "#/components/schemas/RuleVariation",
            "targeted_delivery": "#/components/schemas/RuleVariation"
          },
          "propertyName": "type"
        },
        "properties": {
          "allow_list": {
            "additionalProperties": {
              "$ref": "#/components/schemas/RuleAllowList"
            },
            "description": "User and Variation to force in the experiment",
            "type": "object"
          },
          "archived": {
            "default": false,
            "description": "Indicates if the rule is archived or not.",
            "type": "boolean"
          },
          "audience_conditions": {
            "description": "The audiences that should see this rule. To target everyone, use the string \"everyone\" or omit this field. Multiple audiences can be combined with \"and\" or \"or\" using the same structure as audience conditions.",
            "externalDocs": {
              "description": "same structure as audience conditions",
              "url": "https://developers.optimizely.com/x/rest/guides/conditions/"
            },
            "items": { "example": ["or", { "audience_id": 5340810295 }] },
            "type": "array"
          },
          "baseline_variation_id": {
            "description": "The id of the baseline variation, the original version of an experiment(e.g. control group) against which variations are compared.",
            "type": "integer"
          },
          "comment": {
            "description": "comment on conclusion of rule.",
            "type": "string"
          },
          "created_time": {
            "description": "Timestamp when the Rule is created",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "deployed_td_rule_audience_conditions": {
            "description": "The audiences that should see this deployed Targeted delivery rule.",
            "items": { "example": ["or", { "audience_id": 5340810295 }] },
            "type": "array"
          },
          "deployed_td_rule_key": {
            "description": "deployed_td_rule_key on conclusion of rule.",
            "type": "string"
          },
          "deployed_td_rule_percentage_included": {
            "default": 0,
            "description": "The percentage of the designated audiences that should get the new targeted delevery rule, measured in basis points. 100 basis points = 1% traffic",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "deployed_variation_key": {
            "description": "deployed_variation_key on conclusion of rule.",
            "type": "string"
          },
          "description": {
            "description": "Additional context of the Rule",
            "example": "This rule is used for delivery an experience to paid users",
            "type": "string"
          },
          "distribution_mode": {
            "description": "Type of rule distribution. Only a/b experiment can show distribution_mode field in the response",
            "enum": ["manual", "stats_accelerator"],
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Indicates if the rule is enabled or not in an environment.",
            "type": "boolean"
          },
          "environment_key": {
            "description": "User-facing Environment identifier",
            "readOnly": true,
            "type": "string"
          },
          "environment_name": {
            "description": "The name of the Environment",
            "readOnly": true,
            "type": "string"
          },
          "fetch_results_ui_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "A url to be used to find a particular Results page. This field is optional and returned only if rule has results",
            "readOnly": true
          },
          "flag_key": {
            "description": "User-facing Unique identifier of the Flag.",
            "readOnly": true,
            "type": "string"
          },
          "flag_name": {
            "description": "The name of the Flag",
            "readOnly": true,
            "type": "string"
          },
          "group_id": { "description": "Group id", "type": "string" },
          "group_remaining_traffic_allocation": {
            "description": "Total remaining traffic allocation of the mutual exclusion group that this rule is in. This field is returned only if rule is has mutex group and user has mutex permissions",
            "readOnly": true,
            "type": "integer"
          },
          "group_rule": {
            "$ref": "#/components/schemas/RuleGroupRule",
            "description": "The Group information of this rule belongs to. This field is returned only if rule is has mutex group and user has mutex permissions"
          },
          "id": { "example": 45633994, "readOnly": true, "type": "integer" },
          "key": { "example": "paid_users", "type": "string" },
          "layer_experiment_id": {
            "example": 9000000013579,
            "type": "integer"
          },
          "layer_id": { "example": 9000000013569, "type": "integer" },
          "metrics": {
            "description": "List of metrics that are evaluated for the decision rules.",
            "items": { "$ref": "#/components/schemas/Metric" },
            "type": "array"
          },
          "name": { "example": "Paid Users", "type": "string" },
          "outcome": {
            "description": "outcome of rule.",
            "enum": ["positive", "negative", "inconclusive"],
            "type": "string"
          },
          "percentage_included": {
            "default": 0,
            "description": "The percentage of the designated audiences that should get the decision rule, measured in basis points. 100 basis points = 1% traffic",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "status": {
            "description": "status of rule. Status will change to 'Running' when Ruleset is 'Running'.",
            "enum": ["draft", "running", "paused", "concluded"],
            "type": "string"
          },
          "type": {
            "description": "Type of rule.",
            "enum": ["targeted_delivery", "a/b", "multi_armed_bandit"],
            "type": "string"
          },
          "updated_time": {
            "description": "Timestamp when the Rule is updated",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "urn": {
            "description": "The URN for the Rule",
            "example": "rules.flags.optimizely.com::45633910",
            "readOnly": true,
            "type": "string"
          },
          "variations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/RuleVariationWrapper"
            },
            "description": "Map of variations by variation key.",
            "type": "object"
          }
        },
        "required": ["key", "name", "type"],
        "type": "object"
      },
      "RuleAllowList": {
        "example": {
          "user_id": "xyz123",
          "variation": { "key": false, "name": false }
        },
        "properties": {
          "user_id": { "description": "User identifier", "type": "string" },
          "variation": {
            "description": "Variations to be added to user (key and name)",
            "properties": {
              "key": { "type": "string" },
              "name": { "type": "string" }
            },
            "type": "object"
          }
        },
        "required": ["user_id", "variation"],
        "type": "object"
      },
      "RuleDetails": {
        "properties": {
          "audience_ids": {
            "example": [1, 2, 3],
            "items": { "type": "integer" },
            "type": "array"
          },
          "created_by_user_email": {
            "example": "testuser@optimizely.com",
            "readOnly": true,
            "type": "string"
          },
          "created_time": {
            "description": "Timestamp when the Rule is created",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "days_running": {
            "example": 30,
            "nullable": true,
            "type": "integer"
          },
          "distribution_mode": {
            "description": "Type of rule distribution. Only a/b experiment can show distribution_mode field in the response",
            "enum": ["manual", "stats_accelerator"],
            "type": "string"
          },
          "enabled": { "example": true, "type": "boolean" },
          "fetch_results_ui_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "A url to be used to find a particular Results page. This field is optional and returned only if rule has results",
            "readOnly": true
          },
          "id": { "example": 45633994, "readOnly": true, "type": "integer" },
          "key": { "example": "rule_key", "type": "string" },
          "layer_experiment_id": {
            "example": 123,
            "nullable": true,
            "type": "integer"
          },
          "name": { "example": "Sample Rule", "type": "string" },
          "primary_metric": {
            "example": "conversion_rate",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of the rule",
            "example": "draft",
            "nullable": true,
            "type": "string"
          },
          "traffic_allocation": { "example": 50, "type": "integer" },
          "type": { "example": "rule_type", "type": "string" },
          "updated_time": {
            "description": "Timestamp when the Rule is updated",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "variation_names": {
            "description": "A list of variation names",
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "required": [
          "name",
          "key",
          "type",
          "enabled",
          "audience_ids",
          "traffic_allocation",
          "variation_names"
        ],
        "type": "object"
      },
      "RuleGroupRule": {
        "example": {
          "id": 73915,
          "name": "My Group",
          "traffic_allocation": 5000
        },
        "properties": {
          "group_id": { "description": "Group id", "type": "integer" },
          "group_name": {
            "description": "Name of the Group",
            "readOnly": true,
            "type": "string"
          },
          "traffic_allocation": {
            "description": "The traffic allocation for the GroupRule",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": ["group_id"],
        "type": "object"
      },
      "RuleMap": {
        "additionalProperties": { "$ref": "#/components/schemas/RulesetRule" },
        "example": {
          "landing_page_callout": {
            "archived": false,
            "audience_conditions": ["or", { "audience_id": 5340810295 }],
            "audience_ids": [5340810295],
            "created_time": "2021-02-03 19:57:31.357168+00:00",
            "description": null,
            "distribution_mode": "stats_accelerator",
            "enabled": true,
            "fetch_results_ui_url": "...",
            "id": 1,
            "key": "landing_page_callout",
            "metrics": [
              {
                "aggregator": "sum",
                "display_title": "Increasing Revenue by Session",
                "event_id": 33333333,
                "event_type": "custom",
                "field": "revenue",
                "scope": "session",
                "winning_direction": "increasing"
              }
            ],
            "name": "Landing Page Callout",
            "percentage_included": 5000,
            "type": "a/b",
            "updated_time": "2021-02-03 20:14:21.494855+00:00",
            "urn": "rules.flags.optimizely.com::1",
            "variations": {
              "false": {
                "key": false,
                "name": false,
                "percentage_included": 5000
              },
              "true": { "key": true, "name": true, "percentage_included": 5000 }
            }
          },
          "paid_users": {
            "archived": false,
            "audience_conditions": ["or", { "audience_id": 123456 }],
            "audience_ids": [123456],
            "created_time": "2021-02-03 19:57:31.366368+00:00",
            "description": null,
            "enabled": true,
            "id": 2,
            "key": "paid_users",
            "metrics": [],
            "name": "Paid Users",
            "percentage_included": 10000,
            "type": "targeted_delivery",
            "updated_time": "2021-02-03 20:14:21.530632+00:00",
            "urn": "rules.flags.optimizely.com::2",
            "variations": {
              "true": {
                "key": true,
                "name": true,
                "percentage_included": 10000
              }
            }
          }
        },
        "type": "object"
      },
      "RuleVariation": {
        "example": {
          "key": "high_discount",
          "name": "High Discount",
          "percentage_included": 10000
        },
        "properties": {
          "id": {
            "description": "Id of the RuleVariation",
            "readOnly": true,
            "type": "integer"
          },
          "key": {
            "description": "User-facing Unique identifier of the Variation",
            "type": "string"
          },
          "name": {
            "description": "User-facing name of the Variation",
            "type": "string"
          },
          "percentage_included": {
            "default": 0,
            "description": "The percentage of the designated audiences that should get this variation, measured in basis points. 100 basis points = 1% traffic",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "variation_id": {
            "description": "Id of variation",
            "type": "integer"
          }
        },
        "required": ["key", "percentage_included"],
        "type": "object"
      },
      "RuleVariationCMAB": {
        "example": { "key": "high_discount", "name": "High Discount" },
        "properties": {
          "id": {
            "description": "Id of the RuleVariation",
            "readOnly": true,
            "type": "integer"
          },
          "key": {
            "description": "User-facing Unique identifier of the Variation",
            "type": "string"
          },
          "name": {
            "description": "User-facing name of the Variation",
            "type": "string"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "variation_id": {
            "description": "Id of variation",
            "type": "integer"
          }
        },
        "required": ["key"],
        "type": "object"
      },
      "RuleVariationWrapper": {
        "discriminator": {
          "mapping": {
            "a/b": "#/components/schemas/RuleVariation",
            "contextual_multi_armed_bandit": "#/components/schemas/RuleVariationCMAB",
            "multi_armed_bandit": "#/components/schemas/RuleVariation",
            "targeted_delivery": "#/components/schemas/RuleVariation"
          },
          "propertyName": "type"
        },
        "oneOf": [
          { "$ref": "#/components/schemas/RuleVariation" },
          { "$ref": "#/components/schemas/RuleVariationCMAB" }
        ]
      },
      "Rules": {
        "properties": {
          "count": {
            "description": "Number of Rules on the current page.",
            "example": 2,
            "type": "integer"
          },
          "items": {
            "items": { "$ref": "#/components/schemas/Rule" },
            "type": "array"
          },
          "page": {
            "description": "Number of the current page. 1-index based.",
            "example": 5,
            "type": "integer"
          },
          "total_count": {
            "description": "Total number of Rules for this series.",
            "example": 20,
            "type": "integer"
          },
          "total_pages": {
            "description": "Total number of pages for this series.",
            "example": 10,
            "type": "integer"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self"
          }
        },
        "required": [
          "url",
          "count",
          "page",
          "total_count",
          "total_pages",
          "items"
        ],
        "type": "object"
      },
      "Ruleset": {
        "description": "Rules configuration specific to an environment.",
        "properties": {
          "archived": {
            "description": "Whether this Ruleset is archived or not. The ruleset is archived if the Flag was archived.",
            "example": false,
            "readOnly": true,
            "type": "boolean"
          },
          "default_variation_key": {
            "description": "User-facing Unique identifier of the Variation.",
            "example": "high_discount",
            "type": "string"
          },
          "default_variation_name": {
            "description": "User friendly identifer of the Variation.",
            "example": "High Discount",
            "readOnly": true,
            "type": "string"
          },
          "disable_url": {
            "example": "...",
            "oneOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "readOnly": true
          },
          "enable_url": {
            "example": "...",
            "oneOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "readOnly": true
          },
          "enabled": {
            "default": false,
            "description": "Indicates if the rule is enabled or not in an environment.",
            "type": "boolean"
          },
          "environment_id": {
            "description": "Environment id.",
            "type": "number"
          },
          "environment_key": {
            "description": "User-facing Environment identifier.",
            "example": "production",
            "type": "string"
          },
          "environment_name": {
            "description": "Environment name.",
            "example": "Production",
            "type": "string"
          },
          "fetch_default_variation_url": {
            "description": "A url to the variation that will be executed if no rule audience is served.",
            "readOnly": true,
            "type": "string"
          },
          "fetch_flag_url": {
            "description": "A url to fetch the Flag used by this Ruleset.",
            "oneOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "readOnly": true
          },
          "flag_key": {
            "description": "User-facing Unique identifier of the Flag.",
            "example": "recurring_deposit",
            "type": "string"
          },
          "id": { "example": 23456746, "readOnly": true, "type": "integer" },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "role": {
            "description": "Granular permission role",
            "example": "admin",
            "readOnly": true,
            "type": "string"
          },
          "rule_priorities": {
            "description": "Ordered array of rule keys for the set.",
            "example": ["new_users", "paid_users", "trial_users"],
            "items": { "type": "string" },
            "type": "array"
          },
          "rules": { "allOf": [{ "$ref": "#/components/schemas/RuleMap" }] },
          "status": {
            "description": "status of ruleset.",
            "enum": ["draft", "running", "paused"],
            "type": "string"
          },
          "update_url": {
            "example": "...",
            "oneOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "readOnly": true
          },
          "updated_time": {
            "description": "Timestamp when the Ruleset was last updated",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "Link to self",
            "example": "...",
            "oneOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "readOnly": true
          },
          "urn": {
            "description": "The URN for the Ruleset",
            "example": "ruleset.flag.optimizely.com::a308d9ae-89ba-11ea-bc55-0242ac130003",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "flag_key",
          "environment_key",
          "rule_priorities",
          "urn",
          "url"
        ],
        "type": "object"
      },
      "RulesetRule": {
        "description": "Configuration which contains audiences, metrics and variations.",
        "properties": {
          "allow_list": {
            "additionalProperties": {
              "$ref": "#/components/schemas/RuleAllowList"
            },
            "description": "User and Variation to force in the experiment",
            "type": "object"
          },
          "archived": {
            "default": false,
            "description": "Indicates if the rule is archived or not.",
            "type": "boolean"
          },
          "audience_conditions": {
            "description": "The audiences that should see this rule. To target everyone, use the string \"everyone\" or omit this field. Multiple audiences can be combined with \"and\" or \"or\" using the same structure as audience conditions.",
            "externalDocs": {
              "description": "same structure as audience conditions",
              "url": "https://developers.optimizely.com/x/rest/guides/conditions/"
            },
            "items": { "example": ["or", { "audience_id": 5340810295 }] },
            "type": "array"
          },
          "comment": {
            "description": "comment on conclusion of rule.",
            "type": "string"
          },
          "created_time": {
            "description": "Timestamp when the Rule is created",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "deployed_td_rule_audience_conditions": {
            "description": "The audiences that should see this deployed Targeted delivery rule.",
            "items": { "example": ["or", { "audience_id": 5340810295 }] },
            "type": "array"
          },
          "deployed_td_rule_key": {
            "description": "deployed_td_rule_key on conclusion of rule.",
            "type": "string"
          },
          "deployed_td_rule_percentage_included": {
            "default": 0,
            "description": "The percentage of the designated audiences that should get the new targeted delevery rule, measured in basis points. 100 basis points = 1% traffic",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "deployed_variation_key": {
            "description": "deployed_variation_key on conclusion of rule.",
            "type": "string"
          },
          "description": {
            "description": "Additional context of the Rule",
            "example": "This rule is used for delivery an experience to paid users",
            "type": "string"
          },
          "distribution_mode": {
            "description": "Type of rule distribution.",
            "enum": ["manual", "stats_accelerator"],
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Indicates if the rule is enabled or not in an environment.",
            "type": "boolean"
          },
          "fetch_results_ui_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "A url to be used to find a particular Results page.",
            "readOnly": true
          },
          "group_remaining_traffic_allocation": {
            "description": "Total remaining traffic allocation of the mutual exclusion group that this rule is in.",
            "readOnly": true,
            "type": "integer"
          },
          "group_rule": { "$ref": "#/components/schemas/RuleGroupRule" },
          "id": { "example": 45633994, "readOnly": true, "type": "integer" },
          "key": { "example": "paid_users", "type": "string" },
          "layer_experiment_id": {
            "description": "Experiment ID or Layer Experiment of a rule.",
            "readOnly": true,
            "type": "integer"
          },
          "layer_id": {
            "description": "Layer ID or Campaign ID of a rule.",
            "readOnly": true,
            "type": "integer"
          },
          "metrics": {
            "description": "List of metrics that are evaluated for the decision rules.",
            "items": { "$ref": "#/components/schemas/Metric" },
            "type": "array"
          },
          "name": { "example": "Paid Users", "type": "string" },
          "outcome": {
            "description": "outcome of rule.",
            "enum": ["positive", "negative", "inconclusive"],
            "type": "string"
          },
          "percentage_included": {
            "default": 0,
            "description": "The percentage of the designated audiences that should get the decision rule, measured in basis points. 100 basis points = 1% traffic",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "report_key": {
            "description": "Key identifying a particular Report.",
            "example": "paying_users",
            "readOnly": true,
            "type": "string"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "status": {
            "description": "status of rule.",
            "enum": ["draft", "running", "paused", "concluded"],
            "type": "string"
          },
          "type": {
            "description": "Type of rule.",
            "enum": ["targeted_delivery", "a/b", "multi_armed_bandit"],
            "type": "string"
          },
          "updated_time": {
            "description": "Timestamp when the Rule is updated",
            "example": "2019-05-08T00:00:00.000Z",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "urn": {
            "description": "The URN for the Rule",
            "example": "rules.flags.optimizely.com::45633910",
            "readOnly": true,
            "type": "string"
          },
          "variations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/RulesetRuleVariationWrapper"
            },
            "description": "Map of variations by variation key.",
            "type": "object"
          }
        },
        "required": ["key", "name", "type"],
        "type": "object"
      },
      "RulesetRuleVariation": {
        "example": {
          "key": "high_discount",
          "name": "High Discount",
          "percentage_included": 10000
        },
        "properties": {
          "id": {
            "description": "Id of the RuleVariation",
            "readOnly": true,
            "type": "integer"
          },
          "key": {
            "description": "User-facing Unique identifier of the Variation",
            "type": "string"
          },
          "name": {
            "description": "User-facing name of the Variation",
            "type": "string"
          },
          "percentage_included": {
            "default": 0,
            "description": "The percentage of the designated audiences that should get this variation, measured in basis points. 100 basis points = 1% traffic",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          }
        },
        "required": ["key", "percentage_included"],
        "type": "object"
      },
      "RulesetRuleVariationCMAB": {
        "example": { "key": "high_discount", "name": "High Discount" },
        "properties": {
          "id": {
            "description": "Id of the RuleVariation",
            "readOnly": true,
            "type": "integer"
          },
          "key": {
            "description": "User-facing Unique identifier of the Variation",
            "type": "string"
          },
          "name": {
            "description": "User-facing name of the Variation",
            "type": "string"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          }
        },
        "required": ["key"],
        "type": "object"
      },
      "RulesetRuleVariationWrapper": {
        "discriminator": {
          "mapping": {
            "a/b": "#/components/schemas/RulesetRuleVariation",
            "contextual_multi_armed_bandit": "#/components/schemas/RulesetRuleVariationCMAB",
            "multi_armed_bandit": "#/components/schemas/RulesetRuleVariation",
            "targeted_delivery": "#/components/schemas/RulesetRuleVariation"
          },
          "propertyName": "type"
        },
        "oneOf": [
          { "$ref": "#/components/schemas/RulesetRuleVariation" },
          { "$ref": "#/components/schemas/RulesetRuleVariationCMAB" }
        ]
      },
      "RulesetSummary": {
        "properties": {
          "keys": {
            "example": ["new_users", "paid_users", "trial_users"],
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SubMetric": {
        "properties": {
          "aggregator": { "type": "string" },
          "event_id": { "type": "integer" },
          "event_type": { "type": "string" },
          "field": { "type": "string" },
          "scope": { "type": "string" }
        },
        "type": "object"
      },
      "UrlList": {
        "description": "A list of urls.",
        "items": { "type": "string" },
        "type": "array"
      },
      "UrlValue": { "description": "A single url.", "type": "string" },
      "VariableDefinition": {
        "properties": {
          "default_value": {
            "description": "The default value for the Flag Variable Definition",
            "example": "0.0",
            "type": "string"
          },
          "description": {
            "description": "Additional context of the Flag Variable Definition",
            "example": "This variable is used to configure the amount used for computing the discount",
            "type": "string"
          },
          "key": {
            "description": "Unique string identifier for the Flag Variable Definition within the Flag",
            "example": "amount",
            "type": "string"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "role": {
            "description": "Granular permission role",
            "example": "admin",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The datatype for the Flag Variable Definition",
            "enum": ["boolean", "string", "double", "integer", "json"],
            "example": "double",
            "type": "string"
          }
        },
        "required": ["key", "type", "default_value"],
        "type": "object"
      },
      "VariableDefinitions": {
        "properties": {
          "count": {
            "description": "Number of Variables on the current page.",
            "example": 1,
            "type": "integer"
          },
          "first_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to first page of Variables in a series.",
            "example": "..."
          },
          "items": {
            "items": { "$ref": "#/components/schemas/VariableDefinition" },
            "type": "array"
          },
          "last_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the last page of Variables in a series.",
            "example": "..."
          },
          "next_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to next pages of Variables in a series.\n\n The first element in the array is the exact next page after the current record, etc.\n",
            "example": "..."
          },
          "page": {
            "description": "Number of the current page. 1-index based.",
            "example": 1,
            "type": "integer"
          },
          "prev_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to previous pages of Variables in a series.\n\nThe first element in the array is the exact previous page before the current record, etc.\n"
          },
          "total_count": {
            "description": "Total number of Variables for this series.",
            "example": 1,
            "type": "integer"
          },
          "total_pages": {
            "description": "Total number of pages for this series.",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VariableValue": {
        "properties": {
          "is_default": {
            "description": "True if the value is currently set to the default_value for the variable definition",
            "example": true,
            "type": "boolean"
          },
          "key": {
            "description": "Unique string identifier for the Variable within the Flag",
            "example": "amount",
            "readOnly": true,
            "type": "string"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "description": "The datatype for the Variable",
            "enum": ["boolean", "string", "double", "integer", "json"],
            "example": "double",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The value for the Variable",
            "example": "0.0",
            "type": "string"
          }
        },
        "required": ["value"],
        "type": "object"
      },
      "Variation": {
        "example": {
          "archive_url": "...",
          "archived": false,
          "created_time": "2019-05-08T00:00:00.000Z",
          "delete_url": "...",
          "description": "Use this to provide high discounts",
          "enabled": true,
          "environment_usage_count": { "development": 2, "production": 3 },
          "fetch_flag_url": "...",
          "flag_key": "recurring_deposit",
          "id": 45633995,
          "key": "high_discount",
          "name": "High Discount",
          "revision": 1,
          "unarchive_url": "...",
          "update_url": "...",
          "updated_time": "2019-05-08T00:00:00.000Z",
          "url": "...",
          "urn": "variations.flag.optimizely.com::45633995",
          "variables": {
            "advanced": {
              "key": "advanced",
              "type": "json",
              "value": "{\n\t\"hello\": 123\n}"
            },
            "amount": { "key": "amount", "type": "double", "value": "10.0" },
            "message": {
              "key": "message",
              "type": "string",
              "value": "Enjoy!!"
            }
          }
        },
        "properties": {
          "archive_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to archive this Variation",
            "readOnly": true
          },
          "archived": {
            "description": "Indicates if the Variation is archived or not",
            "type": "boolean"
          },
          "created_time": {
            "description": "Timestamp when the Variation is created",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "delete_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to delete this Variation",
            "readOnly": true
          },
          "description": {
            "description": "Additional context of the Variation",
            "type": "string"
          },
          "enabled": {
            "description": "Indicates if the Variation is enabled or not",
            "readOnly": true,
            "type": "boolean"
          },
          "environment_usage_count": {
            "additionalProperties": { "format": "int32", "type": "integer" },
            "description": "Map of rule/ruleset count associated with the variation in each environment that includes environment key as key and count as value",
            "example": { "development": 15, "production": 20 },
            "readOnly": true,
            "type": "object"
          },
          "fetch_flag_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to flag url of this variation",
            "readOnly": true
          },
          "flag_key": {
            "description": "The Key of the Flag this Variation belongs to",
            "type": "string"
          },
          "id": {
            "description": "System generated Unique ID of the Variation",
            "readOnly": true,
            "type": "integer"
          },
          "in_use": {
            "description": "Indicates if the Variation is in use by a rule or a ruleset",
            "readOnly": true,
            "type": "boolean"
          },
          "key": {
            "description": "User-facing Unique identifier of the Variation",
            "type": "string"
          },
          "name": {
            "description": "User-facing name of the Variation",
            "type": "string"
          },
          "revision": {
            "description": "Revision number for tracking changes",
            "readOnly": true,
            "type": "integer"
          },
          "role": {
            "description": "Granular permission role",
            "example": "admin",
            "readOnly": true,
            "type": "string"
          },
          "unarchive_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to unarchive this Variation",
            "readOnly": true
          },
          "update_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to update this Variation",
            "readOnly": true
          },
          "updated_time": {
            "description": "Timestamp when the Variation is updated",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self",
            "readOnly": true
          },
          "urn": {
            "description": "The URN for the Variation",
            "readOnly": true,
            "type": "string"
          },
          "variables": {
            "additionalProperties": {
              "$ref": "#/components/schemas/VariableValue"
            },
            "description": "Map of flag variables that include variable key and value",
            "type": "object"
          }
        },
        "required": [
          "id",
          "urn",
          "key",
          "name",
          "flag_key",
          "created_time",
          "updated_time",
          "url"
        ],
        "type": "object"
      },
      "VariationMap": {
        "additionalProperties": { "$ref": "#/components/schemas/Variation" },
        "description": "Map of variations that include variation key as key and variation payload as value.",
        "type": "object"
      },
      "VariationRequestBody": {
        "properties": {
          "description": {
            "description": "Additional context of the Variation",
            "example": "Use this to provide high discounts",
            "type": "string"
          },
          "key": {
            "description": "User-facing Unique identifier of the Variation",
            "example": "high_discount",
            "type": "string"
          },
          "name": {
            "description": "User-facing name of the Variation",
            "example": "High Discount",
            "type": "string"
          },
          "variables": {
            "additionalProperties": {
              "$ref": "#/components/schemas/VariableValue"
            },
            "description": "Map of flag variables that include variable key and value",
            "example": {
              "advanced": { "value": "{\n\t\"hello\": 123\n}" },
              "amount": { "value": "10.0" },
              "message": { "value": "Enjoy!!" }
            },
            "type": "object"
          }
        },
        "required": ["key", "name"],
        "type": "object"
      },
      "Variations": {
        "properties": {
          "count": {
            "description": "Number of Variations on the current page.",
            "example": 1,
            "type": "integer"
          },
          "create_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Url template to create Variation for a Flag",
            "example": "..."
          },
          "fetch_variation_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "A url template to be used to find a particular Variation.\n",
            "example": "..."
          },
          "filter_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default page of Variations with filter '.../{?filter}'",
            "example": "..."
          },
          "first_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to first page of Variations in a series.",
            "example": "..."
          },
          "items": {
            "example": [
              {
                "archive_url": "...",
                "archived": false,
                "created_time": "2019-05-08T00:00:00.000Z",
                "delete_url": "...",
                "description": "Use this to provide high discounts",
                "enabled": true,
                "environment_usage_count": {
                  "development": 2,
                  "production": 3
                },
                "fetch_flag_url": "...",
                "flag_key": "recurring_deposit",
                "id": 45633995,
                "key": "high_discount",
                "name": "High Discount",
                "unarchive_url": "...",
                "update_url": "...",
                "updated_time": "2019-05-08T00:00:00.000Z",
                "url": "...",
                "urn": "variations.flag.optimizely.com::45633995",
                "variables": {
                  "advanced": {
                    "key": "advanced",
                    "type": "json",
                    "value": "{\n\t\"hello\": 123\n}"
                  },
                  "amount": {
                    "key": "amount",
                    "type": "double",
                    "value": "10.0"
                  },
                  "message": {
                    "key": "message",
                    "type": "string",
                    "value": "Enjoy!!"
                  }
                }
              },
              {
                "archive_url": "...",
                "archived": false,
                "created_time": "2019-05-08T00:00:00.000Z",
                "delete_url": "...",
                "description": "Use this to provide low discounts",
                "enabled": true,
                "environment_usage_count": {
                  "development": 2,
                  "production": 3
                },
                "fetch_flag_url": "...",
                "flag_key": "recurring_deposit",
                "id": 45633996,
                "key": "low_discount",
                "name": "Low Discount",
                "unarchive_url": "...",
                "update_url": "...",
                "updated_time": "2019-05-08T00:00:00.000Z",
                "url": "...",
                "urn": "variations.flag.optimizely.com::45633995",
                "variables": {
                  "advanced": {
                    "key": "advanced",
                    "type": "json",
                    "value": "{\n\t\"hello\": 123\n}"
                  },
                  "amount": {
                    "key": "amount",
                    "type": "double",
                    "value": "5.0"
                  },
                  "message": {
                    "key": "message",
                    "type": "string",
                    "value": "Enjoy!!"
                  }
                }
              }
            ],
            "items": { "$ref": "#/components/schemas/Variation" },
            "type": "array"
          },
          "last_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the last page of Variations in a series.",
            "example": "..."
          },
          "next_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to next pages of Variations in a series.\n\n The first element in the array is the exact next page after the current record, etc.\n",
            "example": "..."
          },
          "page": {
            "description": "Number of the current page. 1-index based.",
            "example": 1,
            "type": "integer"
          },
          "prev_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlList" }],
            "description": "List of links to previous pages of Variations in a series.\n\nThe first element in the array is the exact previous page before the current record, etc.\n",
            "example": "..."
          },
          "reset_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default page of Variations",
            "example": "..."
          },
          "sort_url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to the default page of Variations with sort '.../{?sort}'",
            "example": "..."
          },
          "total_count": {
            "description": "Total number of Variations for this series.",
            "example": 1,
            "type": "integer"
          },
          "total_pages": {
            "description": "Total number of pages for this series.",
            "example": 1,
            "type": "integer"
          },
          "url": {
            "allOf": [{ "$ref": "#/components/schemas/UrlValue" }],
            "description": "Link to self",
            "example": "..."
          }
        },
        "required": [
          "url",
          "first_url",
          "last_url",
          "count",
          "page",
          "total_count",
          "total_pages",
          "items"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "description": "To get a personal token, see https://docs.developers.optimizely.com/web/docs/personal-token",
        "scheme": "bearer",
        "type": "http"
      },
      "OAuth2": {
        "description": "Write applications that authenticate with the REST API via OAuth 2.0.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://app.optimizely.com/oauth2/authorize",
            "scopes": { "all": "Grants all access" },
            "tokenUrl": "https://app.optimizely.com/oauth2/token"
          }
        },
        "type": "oauth2"
      },
      "apiKey": { "scheme": "bearer", "type": "http" }
    }
  },
  "info": {
    "description": "This page documents how to use the Optimizely FX API.\nWith this API you can view and manage Feature Flags and all of their\nrelated entities including Variables, Variations, Rules, and Reports.\n\nThe base URL is https://api.optimizely.com/flags/v1. Append any paths\nlisted in these docs onto that url in order to make requests to the API.",
    "title": "Optimizely Feature Experimentation API",
    "version": "0.3.7",
    "x-logo": {
      "url": "https://app.optimizely.com/static/img/rebrand/logo.svg"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/projects/{project_id}/environments": {
      "get": {
        "description": "Get a list of Environments within a Project\nYou can use query parameters to filter/sort the response.\n",
        "operationId": "list_environments",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/perPage" },
          { "$ref": "#/components/parameters/pageToken" },
          { "$ref": "#/components/parameters/pageWindow" },
          {
            "description": "Filter the Environments by archived. An Environment can be either archived (archived=true) or unarchived (archived=false)\n",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "allowReserved": true,
            "description": "Sort the Environments based on the attributes from left to right.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "items": {
                "enum": ["priority:asc", "priority:desc"],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Environments" }
              }
            },
            "description": "Successful retrieval of a page of Environments.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links and pagination metadata.\nObjects in this API MAY include a url property for a link to itself and MAY append _url to properties for related links.\nIf a link is not present in the response, it indicates a user is not authorized to access the related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "List Environments",
        "tags": ["Environments"]
      }
    },
    "/projects/{project_id}/environments/{environment_key}/reports": {
      "get": {
        "description": "Get a list of Reports for a specific Environment of a project\n\nYou can use query parameters to filter/sort the response.\n",
        "operationId": "list_reports",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/environmentKey" },
          { "$ref": "#/components/parameters/perPage" },
          { "$ref": "#/components/parameters/pageToken" },
          { "$ref": "#/components/parameters/pageWindow" },
          {
            "allowReserved": true,
            "description": "Sort the Reports based on the attributes from left to right.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "name:asc",
                  "name:desc",
                  "key:asc",
                  "key:desc",
                  "created_time:asc",
                  "created_time:desc",
                  "updated_time:asc",
                  "updated_time:desc"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filter the Reports by archived field status. A Report can be either archived (archived=true) or unarchived (archived=false)\n",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Filter the Reports by name, key, or description substring\n",
            "in": "query",
            "name": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Reports" }
              }
            },
            "description": "Successful retrieval of a page of Reports.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links and pagination metadata.\nObjects in this API MAY include a url property for a link to itself and MAY append _url to properties for related links.\nIf a link is not present in the response, it indicates a user is not authorized to access the related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "List Reports",
        "tags": ["Reports"]
      }
    },
    "/projects/{project_id}/environments/{environment_key}/reports/archived": {
      "post": {
        "description": "Archive one or more Reports in an Environment of a Project.\n\nThis operation corresponds to the `archive_url` in a Reports response.\n",
        "operationId": "archive_reports",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/environmentKey" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "keys": ["landing_page_callout_N6JU6FJ2YiMdujucr6R6uf"]
              },
              "schema": {
                "$ref": "#/components/schemas/BulkOperationsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "landing_page_callout_N6JU6FJ2YiMdujucr6R6uf": {
                    "archived": true,
                    "created_time": "2021-02-03 19:57:31.418350+00:00",
                    "delete_url": "/projects/23004/environments/development/reports/landing_page_callout_kK2mpgdxRMRRXx6dZkFLsB",
                    "description": null,
                    "fetch_flag_url": "/projects/23004/flags/recurring_deposit",
                    "fetch_results_api_url": "https://api.develrc-app.optimizely.com/experiments/9000000010001/results",
                    "fetch_results_ui_url": "https://app.optimizely.test/v2/projects/23004/results/9000000010001/experiments/9000000010001",
                    "flag_key": "recurring_deposit",
                    "flag_name": "Recurring Deposit",
                    "flag_state": "unarchived",
                    "id": 1,
                    "key": "landing_page_callout_N6JU6FJ2YiMdujucr6R6uf",
                    "name": "Landing Page Callout",
                    "reset_results_url": "/projects/23004/environments/development/reports/landing_page_callout_kK2mpgdxRMRRXx6dZkFLsB/reset-results",
                    "rule_key": "landing_page_callout",
                    "rule_name": "Landing Page Callout",
                    "rule_state": "enabled",
                    "start_time": "2021-02-03 21:52:58.603598+00:00",
                    "type": "a/b",
                    "unarchive_url": "/projects/23004/environments/development/reports/unarchived",
                    "updated_time": "2021-02-03 21:53:01.735777+00:00",
                    "url": "/projects/23004/environments/development/reports/landing_page_callout_kK2mpgdxRMRRXx6dZkFLsB",
                    "urn": "reports.flags.optimizely.com::1"
                  }
                },
                "schema": { "$ref": "#/components/schemas/ReportMap" }
              }
            },
            "description": "Successful archive of Reports.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Archive Reports",
        "tags": ["Reports"]
      }
    },
    "/projects/{project_id}/environments/{environment_key}/reports/unarchived": {
      "post": {
        "description": "Unarchive one or more Reports in an Environment of a Project.\n\nThis operation corresponds to the `unarchive_url` in a Reports response.\n",
        "operationId": "unarchive_reports",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/environmentKey" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "keys": ["landing_page_callout_N6JU6FJ2YiMdujucr6R6uf"]
              },
              "schema": {
                "$ref": "#/components/schemas/BulkOperationsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "landing_page_callout_N6JU6FJ2YiMdujucr6R6uf": {
                    "archived": false,
                    "created_time": "2021-02-03 19:57:31.418350+00:00",
                    "delete_url": "/projects/23004/environments/development/reports/landing_page_callout_kK2mpgdxRMRRXx6dZkFLsB",
                    "description": null,
                    "fetch_flag_url": "/projects/23004/flags/recurring_deposit",
                    "fetch_results_api_url": "https://api.develrc-app.optimizely.com/experiments/9000000010001/results",
                    "fetch_results_ui_url": "https://app.optimizely.test/v2/projects/23004/results/9000000010001/experiments/9000000010001",
                    "flag_key": "recurring_deposit",
                    "flag_name": "Recurring Deposit",
                    "flag_state": "unarchived",
                    "id": 1,
                    "key": "landing_page_callout_N6JU6FJ2YiMdujucr6R6uf",
                    "name": "Landing Page Callout",
                    "reset_results_url": "/projects/23004/environments/development/reports/landing_page_callout_kK2mpgdxRMRRXx6dZkFLsB/reset-results",
                    "rule_key": "landing_page_callout",
                    "rule_name": "Landing Page Callout",
                    "rule_state": "enabled",
                    "start_time": "2021-02-03 21:52:58.603598+00:00",
                    "type": "a/b",
                    "unarchive_url": "/projects/23004/environments/development/reports/unarchived",
                    "updated_time": "2021-02-03 21:53:01.735777+00:00",
                    "url": "/projects/23004/environments/development/reports/landing_page_callout_kK2mpgdxRMRRXx6dZkFLsB",
                    "urn": "reports.flags.optimizely.com::1"
                  }
                },
                "schema": { "$ref": "#/components/schemas/ReportMap" }
              }
            },
            "description": "Successful unarchive of Reports.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Unarchive Reports",
        "tags": ["Reports"]
      }
    },
    "/projects/{project_id}/environments/{environment_key}/reports/{report_key}": {
      "delete": {
        "description": "Permanently delete a Report by key in an Environment of a project\n\nThere will be no way to access this data after deletion. If you want to\nstop seeing a Report without deleting it permanently, try archiving\ninstead.\n",
        "operationId": "delete_report",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/environmentKey" },
          { "$ref": "#/components/parameters/reportKey" }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Delete a Report",
        "tags": ["Reports"]
      },
      "get": {
        "description": "Fetch a single Report in an Environment of a Project by its key.\n\nThis operation corresponds to the `fetch_report_url` in a Report response.\n",
        "operationId": "fetch_report",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/environmentKey" },
          { "$ref": "#/components/parameters/reportKey" }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/ReportSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Fetch a Single Report",
        "tags": ["Reports"]
      }
    },
    "/projects/{project_id}/environments/{environment_key}/reports/{report_key}/reset-results": {
      "post": {
        "description": "Resetting the results for a Report will clear all the current results and results will be calculated from this point onwards.\nUse caution with this operation as there will be no way to access any previous results.\n",
        "operationId": "reset_results",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/environmentKey" },
          { "$ref": "#/components/parameters/reportKey" }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/ReportSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Reset the results for a Report",
        "tags": ["Reports"]
      }
    },
    "/projects/{project_id}/flags": {
      "get": {
        "description": "Get a list of Flags within a Project\n\nYou can use query parameters to filter/sort the response.\n",
        "operationId": "list_flags",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/perPage" },
          { "$ref": "#/components/parameters/pageNumber" },
          { "$ref": "#/components/parameters/pageToken" },
          { "$ref": "#/components/parameters/pageWindow" },
          {
            "allowReserved": true,
            "description": "Sort the Flags based on the attributes from left to right.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "name:asc",
                  "name:desc",
                  "key:asc",
                  "key:desc",
                  "created_time:asc",
                  "created_time:desc",
                  "updated_time:asc",
                  "updated_time:desc",
                  "enabled_in_environment:asc",
                  "enabled_in_environment:desc",
                  "rules_in_environment:asc",
                  "rules_in_environment:desc",
                  "created_by_user_email:asc",
                  "created_by_user_email:desc"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filter the Flags by archived. A Flag can be either archived (archived=true) or unarchived (archived=false)\n",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Filter the Flags by enabled. A Flag can be either enabled (enabled=true) or disabled (enabled=false)\n",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Filter the Flags by Rule Status. Supports matching one, multiple, or excluding multiple values.\n- For matching one: `rule_status=value`\n- For matching multiple: `rule_status=value1,value2`\n- For excluding multiple: `rule_status=!value1,!value2`\n",
            "in": "query",
            "name": "rule_status",
            "required": false,
            "schema": {
              "example": ["draft", "!concluded"],
              "items": { "type": "string" },
              "type": "array"
            }
          },
          {
            "description": "Filter the Flags by Environment Status. Supports matching one, multiple, or excluding multiple values.\n- For matching one: `environment_status=value`\n- For matching multiple: `environment_status=value1,value2`\n- For excluding multiple: `environment_status=!value1,!value2`\n",
            "in": "query",
            "name": "environment_status",
            "required": false,
            "schema": {
              "example": ["draft", "!concluded"],
              "items": { "type": "string" },
              "type": "array"
            }
          },
          {
            "description": "Filter the Flags by the environment_type\n",
            "in": "query",
            "name": "environment_type",
            "schema": {
              "items": {
                "example": ["!production", "development"],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filter the Flags by the environment\n",
            "in": "query",
            "name": "environment",
            "required": false,
            "schema": {
              "items": { "example": "production", "type": "string" },
              "type": "array"
            }
          },
          {
            "allowReserved": true,
            "description": "Filter the Flags by the rule type.",
            "in": "query",
            "name": "rule_type",
            "required": false,
            "schema": {
              "items": {
                "example": ["a/b", "!multi_armed_bandit"],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filter the Flags by name, key, or\ndescription substring\n",
            "in": "query",
            "name": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Filter the Flags by multiple keys\n",
            "in": "query",
            "name": "key_list",
            "schema": {
              "items": { "example": "key_1", "type": "string" },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Flags" }
              }
            },
            "description": "Successful retrieval of a page of Flags.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links and pagination metadata.\nObjects in this API MAY include a url property for a link to itself and MAY append _url to properties for related links.\nIf a link is not present in the response, it indicates a user is not authorized to access the related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "List Flags",
        "tags": ["Flags"]
      },
      "patch": {
        "description": "Update one or more Flags in a project using a json patch structure.\n\nProperties that are readOnly that are present in the request body will be ignored as well as\nunknown properties.\n",
        "operationId": "update_flags",
        "parameters": [{ "$ref": "#/components/parameters/projectId" }],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "example": [
                {
                  "op": "replace",
                  "path": "/recurring_deposit/description",
                  "value": "Updated description for recurring deposit flag"
                }
              ],
              "schema": {
                "items": { "$ref": "#/components/schemas/PatchRequestBody" },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "recurring_deposit": {
                    "account_id": 12345,
                    "archive_url": "...",
                    "archived": false,
                    "created_time": "2019-05-08T00:00:00.000Z",
                    "delete_url": "string",
                    "description": "Updated description for recurring deposit flag",
                    "environments": {
                      "development": {
                        "disable_url": "...",
                        "enable_url": "...",
                        "enabled": false,
                        "is_primary": false,
                        "key": "development",
                        "name": "Development",
                        "priority": 2,
                        "rules_detail": [
                          {
                            "audience_ids": [1],
                            "created_time": "2022-01-08T00:00:00.000Z",
                            "days_running": 30,
                            "enabled": true,
                            "id": 123,
                            "key": "a/b",
                            "name": "A/B Test",
                            "primary_metric": "conversion_rate",
                            "traffic_allocation": 100,
                            "type": "experiment",
                            "updated_time": "2022-01-08T00:00:00.000Z"
                          }
                        ],
                        "rules_summary": {
                          "a/b": { "keys": ["new_users"] },
                          "targeted_delivery": {
                            "keys": ["paid_users", "trial_users"]
                          }
                        }
                      },
                      "production": {
                        "disable_url": "...",
                        "enable_url": "...",
                        "enabled": false,
                        "key": "production",
                        "name": "Production",
                        "priority": 1,
                        "rules_detail": [
                          {
                            "audience_ids": [1],
                            "created_time": "2022-01-08T00:00:00.000Z",
                            "days_running": 30,
                            "distribution_mode": "manual",
                            "enabled": true,
                            "fetch_results_ui_url": "...",
                            "id": 123,
                            "key": "a/b",
                            "layer_experiment_id": 345,
                            "name": "A/B Test",
                            "primary_metric": "conversion_rate",
                            "traffic_allocation": 100,
                            "type": "experiment",
                            "updated_time": "2022-01-08T00:00:00.000Z"
                          }
                        ],
                        "rules_summary": {
                          "a/b": { "keys": ["new_users"] },
                          "targeted_delivery": {
                            "keys": ["paid_users", "trial_users"]
                          }
                        }
                      }
                    },
                    "id": 45633994,
                    "key": "recurring_deposit",
                    "name": "Recurring Deposit",
                    "outlier_filtering_enabled": false,
                    "project_id": 12345,
                    "unarchive_url": "...",
                    "update_url": "...",
                    "updated_time": "2019-05-08T00:00:00.000Z",
                    "url": "...",
                    "urn": "flags.flag.optimizely.com::asdfsdf-2344-efadf03-343434-efrrr",
                    "variable_definitions": {
                      "advanced": {
                        "default_value": "{\n\t\"hello\": 123\n}",
                        "description": "This variable is used to configure the advanced used for advanced purposes",
                        "key": "advanced",
                        "type": "json"
                      },
                      "amount": {
                        "default_value": "0.0",
                        "description": "This variable is used to configure the amount used for computing the discount",
                        "key": "amount",
                        "type": "double"
                      },
                      "message": {
                        "default_value": "Use recurring deposits to compound interest",
                        "description": "This variable is used to configure the message used for displaying the discount",
                        "key": "message",
                        "type": "string"
                      }
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/FlagMap" }
              }
            },
            "description": "Successful update, archive or unarchive of Flags.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Update Flags",
        "tags": ["Flags"]
      },
      "post": {
        "description": "Creates a new Flag in a Project.\n\nThis operation corresponds to the `create_url` in a Flags response.\n\nRequired properties must be present in the request body.\n",
        "operationId": "create_flag",
        "parameters": [{ "$ref": "#/components/parameters/projectId" }],
        "requestBody": { "$ref": "#/components/requestBodies/FlagRequest" },
        "responses": {
          "201": { "$ref": "#/components/responses/FlagSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "Create a New Flag",
        "tags": ["Flags"]
      }
    },
    "/projects/{project_id}/flags/archived": {
      "post": {
        "description": "Archive one or more Flags in a project.\n\nThis operation corresponds to the `archive_url` in a Flags response.\n",
        "operationId": "archive_flags",
        "parameters": [{ "$ref": "#/components/parameters/projectId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": { "keys": ["recurring_deposit"] },
              "schema": {
                "$ref": "#/components/schemas/BulkOperationsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "recurring_deposit": {
                    "account_id": 12345,
                    "archive_url": "...",
                    "archived": true,
                    "created_time": "2019-05-08T00:00:00.000Z",
                    "delete_url": "string",
                    "description": "Flag used for driving customers to use recurring deposits by showing a graph of compound interest over time",
                    "environments": {
                      "development": {
                        "disable_url": "...",
                        "enable_url": "...",
                        "enabled": false,
                        "is_primary": false,
                        "key": "development",
                        "name": "Development",
                        "priority": 2,
                        "rules_detail": [
                          {
                            "audience_ids": [1],
                            "created_time": "2022-01-08T00:00:00.000Z",
                            "days_running": 30,
                            "enabled": true,
                            "id": 123,
                            "key": "a/b",
                            "name": "A/B Test",
                            "primary_metric": "conversion_rate",
                            "traffic_allocation": 100,
                            "type": "experiment",
                            "updated_time": "2022-01-08T00:00:00.000Z"
                          }
                        ],
                        "rules_summary": {
                          "a/b": { "keys": ["new_users"] },
                          "targeted_delivery": {
                            "keys": ["paid_users", "trial_users"]
                          }
                        }
                      },
                      "production": {
                        "disable_url": "...",
                        "enable_url": "...",
                        "enabled": false,
                        "key": "production",
                        "name": "Production",
                        "priority": 1,
                        "rules_detail": [
                          {
                            "audience_ids": [1],
                            "created_time": "2022-01-08T00:00:00.000Z",
                            "days_running": 30,
                            "enabled": true,
                            "id": 123,
                            "key": "a/b",
                            "name": "A/B Test",
                            "primary_metric": "conversion_rate",
                            "traffic_allocation": 100,
                            "type": "experiment",
                            "updated_time": "2022-01-08T00:00:00.000Z"
                          }
                        ],
                        "rules_summary": {
                          "a/b": { "keys": ["new_users"] },
                          "targeted_delivery": {
                            "keys": ["paid_users", "trial_users"]
                          }
                        }
                      }
                    },
                    "id": 45633994,
                    "key": "recurring_deposit",
                    "name": "Recurring Deposit",
                    "outlier_filtering_enabled": false,
                    "project_id": 12345,
                    "unarchive_url": "...",
                    "update_url": "...",
                    "updated_time": "2019-05-08T00:00:00.000Z",
                    "url": "...",
                    "urn": "flags.flag.optimizely.com::asdfsdf-2344-efadf03-343434-efrrr",
                    "variable_definitions": {
                      "advanced": {
                        "default_value": "{\n\t\"hello\": 123\n}",
                        "description": "This variable is used to configure the advanced used for advanced purposes",
                        "key": "advanced",
                        "type": "json"
                      },
                      "amount": {
                        "default_value": "0.0",
                        "description": "This variable is used to configure the amount used for computing the discount",
                        "key": "amount",
                        "type": "double"
                      },
                      "message": {
                        "default_value": "Use recurring deposits to compound interest",
                        "description": "This variable is used to configure the message used for displaying the discount",
                        "key": "message",
                        "type": "string"
                      }
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/FlagMap" }
              }
            },
            "description": "Successful archive of Flags.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Archive Flags",
        "tags": ["Flags"]
      }
    },
    "/projects/{project_id}/flags/unarchived": {
      "post": {
        "description": "Unarchive one or more Flags in a project.\n\nThis operation corresponds to the `unarchive_url` in a Flags response.\n",
        "operationId": "unarchive_flags",
        "parameters": [{ "$ref": "#/components/parameters/projectId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": { "keys": ["recurring_deposit"] },
              "schema": {
                "$ref": "#/components/schemas/BulkOperationsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "recurring_deposit": {
                    "account_id": 12345,
                    "archive_url": "...",
                    "archived": false,
                    "created_time": "2019-05-08T00:00:00.000Z",
                    "delete_url": "string",
                    "description": "Flag used for driving customers to use recurring deposits by showing a graph of compound interest over time",
                    "environments": {
                      "development": {
                        "disable_url": "...",
                        "enable_url": "...",
                        "enabled": false,
                        "is_primary": false,
                        "key": "development",
                        "name": "Development",
                        "priority": 2,
                        "rules_summary": [
                          {
                            "audience_ids": [1],
                            "created_time": "2022-01-08T00:00:00.000Z",
                            "days_running": 30,
                            "enabled": true,
                            "key": "a/b",
                            "name": "A/B Test",
                            "primary_metric": "conversion_rate",
                            "traffic_allocation": 100,
                            "type": "experiment",
                            "updated_time": "2022-01-08T00:00:00.000Z"
                          }
                        ]
                      },
                      "production": {
                        "disable_url": "...",
                        "enable_url": "...",
                        "enabled": false,
                        "key": "production",
                        "name": "Production",
                        "priority": 1,
                        "rules_detail": [
                          {
                            "audience_ids": [1],
                            "created_time": "2022-01-08T00:00:00.000Z",
                            "days_running": 30,
                            "enabled": true,
                            "id": 123,
                            "key": "a/b",
                            "name": "A/B Test",
                            "primary_metric": "conversion_rate",
                            "traffic_allocation": 100,
                            "type": "experiment",
                            "updated_time": "2022-01-08T00:00:00.000Z"
                          }
                        ],
                        "rules_summary": {
                          "a/b": { "keys": ["new_users"] },
                          "targeted_delivery": {
                            "keys": ["paid_users", "trial_users"]
                          }
                        }
                      }
                    },
                    "id": 45633994,
                    "key": "recurring_deposit",
                    "name": "Recurring Deposit",
                    "outlier_filtering_enabled": false,
                    "project_id": 12345,
                    "unarchive_url": "...",
                    "update_url": "...",
                    "updated_time": "2019-05-08T00:00:00.000Z",
                    "url": "...",
                    "urn": "flags.flag.optimizely.com::asdfsdf-2344-efadf03-343434-efrrr",
                    "variable_definitions": {
                      "advanced": {
                        "default_value": "{\n\t\"hello\": 123\n}",
                        "description": "This variable is used to configure the advanced used for advanced purposes",
                        "key": "advanced",
                        "type": "json"
                      },
                      "amount": {
                        "default_value": "0.0",
                        "description": "This variable is used to configure the amount used for computing the discount",
                        "key": "amount",
                        "type": "double"
                      },
                      "message": {
                        "default_value": "Use recurring deposits to compound interest",
                        "description": "This variable is used to configure the message used for displaying the discount",
                        "key": "message",
                        "type": "string"
                      }
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/FlagMap" }
              }
            },
            "description": "Successful unarchive of Flags.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Unarchive Flags",
        "tags": ["Flags"]
      }
    },
    "/projects/{project_id}/flags/{flag_id}/entities": {
      "get": {
        "description": "Get entities associated for a specific Flag in a Project\n\nYou can use query parameters to filter/sort the response.\n",
        "operationId": "entities",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagId" }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ChangeHistorySuccessResponse"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "Get Change History",
        "tags": ["Changes"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}": {
      "delete": {
        "description": "Permanently delete a Flag by key.\n\nThere will be no way to access this data after deletion. If you want to\nstop seeing a Flag without deleting it permanently, try archiving\ninstead.\n",
        "operationId": "delete_flag",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Delete a Flag",
        "tags": ["Flags"]
      },
      "get": {
        "description": "Fetch a single Flag in a Project by its key.\n\nThis operation corresponds to the `fetch_flag_url` in a Flags response.\n",
        "operationId": "fetch_flag",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/FlagSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Fetch a Single Flag",
        "tags": ["Flags"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/environments/{environment_key}/rules/{rule_key}": {
      "get": {
        "description": "Fetch a Rule for a Ruleset in a specific Environment of a project.\n",
        "operationId": "fetch_rule",
        "responses": {
          "200": { "$ref": "#/components/responses/RuleSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Fetch the Rule for a Ruleset in an Environment",
        "tags": ["Rules"]
      },
      "parameters": [
        { "$ref": "#/components/parameters/projectId" },
        { "$ref": "#/components/parameters/flagKey" },
        { "$ref": "#/components/parameters/environmentKey" },
        { "$ref": "#/components/parameters/ruleKey" }
      ]
    },
    "/projects/{project_id}/flags/{flag_key}/environments/{environment_key}/ruleset": {
      "get": {
        "description": "Fetch a Ruleset for a Flag in a specific Environment of a project.\n\nThe Ruleset contains the set of all Rules that apply to the Flag for that Environment.\n",
        "operationId": "fetch_ruleset",
        "responses": {
          "200": { "$ref": "#/components/responses/RulesetSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Fetch the Ruleset for a Flag in an Environment",
        "tags": ["Rulesets"]
      },
      "parameters": [
        { "$ref": "#/components/parameters/projectId" },
        { "$ref": "#/components/parameters/flagKey" },
        { "$ref": "#/components/parameters/environmentKey" }
      ],
      "patch": {
        "description": "Update the Ruleset for a Flag in a specific Environment of a project using a json patch structure.\nProperties that are read only that are present in the request body will be ignored as well as\nunknown properties.\n",
        "operationId": "update_ruleset",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "example": [
                {
                  "op": "add",
                  "path": "/rules/landing_page_callout",
                  "value": {
                    "allow_list": {
                      "user_id": "xyz123",
                      "variation_key": false
                    },
                    "audience_conditions": ["or", { "audience_id": 222222 }],
                    "key": "landing_page_callout",
                    "metrics": [
                      {
                        "aggregator": "sum",
                        "display_title": "Increasing Revenue by Session",
                        "event_id": 33333333,
                        "field": "revenue",
                        "scope": "session",
                        "winning_direction": "increasing"
                      }
                    ],
                    "name": "Landing Page Callout",
                    "percentage_included": 5000,
                    "variations": {
                      "false": {
                        "key": false,
                        "name": false,
                        "percentage_included": 5000
                      },
                      "true": {
                        "key": true,
                        "name": true,
                        "percentage_included": 5000
                      }
                    }
                  }
                },
                {
                  "op": "add",
                  "path": "/rules/paid_users",
                  "value": {
                    "audience_conditions": ["or", { "audience_id": 111111 }],
                    "key": "paid_users",
                    "name": "Paid Users",
                    "percentage_included": 10000,
                    "type": "targeted_delivery",
                    "variations": {
                      "true": {
                        "key": true,
                        "name": true,
                        "percentage_included": 10000
                      }
                    }
                  }
                },
                {
                  "op": "add",
                  "path": "/rule_priorities/0",
                  "value": "landing_page_callout"
                },
                {
                  "op": "add",
                  "path": "/rule_priorities/0",
                  "value": "paid_users"
                }
              ],
              "schema": {
                "items": { "$ref": "#/components/schemas/PatchRequestBody" },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "archived": false,
                  "default_variation_key": false,
                  "default_variation_name": false,
                  "disable_url": "...",
                  "enable_url": "...",
                  "enabled": false,
                  "environment_key": "development",
                  "environment_name": "Development",
                  "fetch_default_variation_url": "...",
                  "fetch_flag_url": "...",
                  "flag_key": "recurring_deposit",
                  "id": 23456746,
                  "rule_priorities": ["landing_page_callout", "paid_users"],
                  "rules": {
                    "landing_page_callout": {
                      "allow_list": {
                        "xyz123": {
                          "user_id": "xyz123",
                          "variation": { "key": false, "name": false }
                        }
                      },
                      "archived": false,
                      "audience_conditions": ["or", { "audience_id": 222222 }],
                      "audience_ids": [5340810295],
                      "created_time": "2021-02-03 19:57:31.357168+00:00",
                      "description": "",
                      "distribution_mode": "stats_accelerator",
                      "enabled": true,
                      "id": 1,
                      "key": "landing_page_callout",
                      "layer_experiment_id\"": 9000000010002,
                      "layer_id": 9000000010002,
                      "metrics": [
                        {
                          "aggregator": "sum",
                          "display_title": "Increasing Revenue by Session",
                          "event_id": 33333333,
                          "event_type": "custom",
                          "field": "revenue",
                          "scope": "session",
                          "winning_direction": "increasing"
                        }
                      ],
                      "name": "Landing Page Callout",
                      "percentage_included": 5000,
                      "type": "a/b",
                      "updated_time": "2021-02-03 19:57:31.357173+00:00",
                      "urn": "rules.flags.optimizely.com::1",
                      "variations": {
                        "false": {
                          "key": false,
                          "name": false,
                          "percentage_included": 5000
                        },
                        "true": {
                          "key": true,
                          "name": true,
                          "percentage_included": 5000
                        }
                      }
                    },
                    "paid_users": {
                      "allow_list": {
                        "xyz123": {
                          "user_id": "xyz123",
                          "variation": { "key": false, "name": false }
                        }
                      },
                      "archived": false,
                      "audience_conditions": ["or", { "audience_id": 123456 }],
                      "audience_ids": [123456],
                      "created_time": "2021-02-03 19:57:31.366368+00:00",
                      "description": "",
                      "enabled": true,
                      "id": 2,
                      "key": "paid_users",
                      "layer_experiment_id\"": 9000000010003,
                      "layer_id\"": 9000000010003,
                      "metrics": [],
                      "name": "Paid Users",
                      "percentage_included": 10000,
                      "type": "targeted_delivery",
                      "updated_time": "2021-02-03 19:57:31.366372+00:00",
                      "urn": "rules.flags.optimizely.com::2",
                      "variations": {
                        "true": {
                          "key": true,
                          "name": true,
                          "percentage_included": 10000
                        }
                      }
                    }
                  },
                  "update_url": "...",
                  "updated_time": "2019-05-08 00:00:00+00:00",
                  "url": "...",
                  "urn": "rulesets.flags.optimizely.com::23456746"
                },
                "schema": { "$ref": "#/components/schemas/Ruleset" }
              }
            },
            "description": "Successful update of the Ruleset.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Update the Ruleset for a Flag in an Environment",
        "tags": ["Rulesets"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/environments/{environment_key}/ruleset/disabled": {
      "post": {
        "description": "Disables the entire Ruleset for a Flag in an Environment",
        "operationId": "disable_ruleset",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" },
          { "$ref": "#/components/parameters/environmentKey" }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "archived": false,
                  "default_variation_key": false,
                  "default_variation_name": false,
                  "disable_url": "...",
                  "enable_url": "...",
                  "enabled": false,
                  "environment_key": "development",
                  "environment_name": "Development",
                  "fetch_default_variation_url": "...",
                  "fetch_flag_url": "...",
                  "flag_key": "recurring_deposit",
                  "id": 23456746,
                  "rule_priorities": ["landing_page_callout", "paid_users"],
                  "rules": {
                    "landing_page_callout": {
                      "allow_list": {
                        "xyz123": {
                          "user_id": "xyz123",
                          "variation": { "key": false, "name": false }
                        }
                      },
                      "archived": false,
                      "audience_conditions": ["or", { "audience_id": 222222 }],
                      "audience_ids": [5340810295],
                      "created_time": "2021-02-03 19:57:31.357168+00:00",
                      "description": "",
                      "distribution_mode": "stats_accelerator",
                      "enabled": true,
                      "id": 1,
                      "key": "landing_page_callout",
                      "layer_experiment_id\"": 9000000010002,
                      "layer_id\"": 9000000010002,
                      "metrics": [
                        {
                          "aggregator": "sum",
                          "display_title": "Increasing Revenue by Session",
                          "event_id": 33333333,
                          "event_type": "custom",
                          "field": "revenue",
                          "scope": "session",
                          "winning_direction": "increasing"
                        }
                      ],
                      "name": "Landing Page Callout",
                      "percentage_included": 5000,
                      "type": "a/b",
                      "updated_time": "2021-02-03 19:57:31.357173+00:00",
                      "urn": "rules.flags.optimizely.com::1",
                      "variations": {
                        "false": {
                          "key": false,
                          "name": false,
                          "percentage_included": 5000
                        },
                        "true": {
                          "key": true,
                          "name": true,
                          "percentage_included": 5000
                        }
                      }
                    },
                    "paid_users": {
                      "allow_list": {
                        "xyz123": {
                          "user_id": "xyz123",
                          "variation": { "key": false, "name": false }
                        }
                      },
                      "archived": false,
                      "audience_conditions": ["or", { "audience_id": 123456 }],
                      "audience_ids": [123456],
                      "created_time": "2021-02-03 19:57:31.366368+00:00",
                      "description": "",
                      "enabled": true,
                      "id": 2,
                      "key": "paid_users",
                      "layer_experiment_id\"": 9000000010003,
                      "layer_id\"": 9000000010003,
                      "metrics": [],
                      "name": "Paid Users",
                      "percentage_included": 10000,
                      "type": "targeted_delivery",
                      "updated_time": "2021-02-03 19:57:31.366372+00:00",
                      "urn": "rules.flags.optimizely.com::2",
                      "variations": {
                        "true": {
                          "key": true,
                          "name": true,
                          "percentage_included": 10000
                        }
                      }
                    }
                  },
                  "update_url": "...",
                  "updated_time": "2019-05-08 00:00:00+00:00",
                  "url": "...",
                  "urn": "rulesets.flags.optimizely.com::23456746"
                },
                "schema": { "$ref": "#/components/schemas/Ruleset" }
              }
            },
            "description": "Successful disabling of the Ruleset.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Disable the Ruleset for a Flag in an Environment",
        "tags": ["Rulesets"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/environments/{environment_key}/ruleset/enabled": {
      "post": {
        "description": "Enables the entire Ruleset for a Flag in an Environment",
        "operationId": "enable_ruleset",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" },
          { "$ref": "#/components/parameters/environmentKey" }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "archived": false,
                  "default_variation_key": false,
                  "default_variation_name": false,
                  "disable_url": "...",
                  "enable_url": "...",
                  "enabled": true,
                  "environment_key": "development",
                  "environment_name": "Development",
                  "fetch_default_variation_url": "...",
                  "fetch_flag_url": "...",
                  "flag_key": "recurring_deposit",
                  "id": 23456746,
                  "rule_priorities": ["landing_page_callout", "paid_users"],
                  "rules": {
                    "landing_page_callout": {
                      "allow_list": {
                        "xyz123": {
                          "user_id": "xyz123",
                          "variation": { "key": false, "name": false }
                        }
                      },
                      "archived": false,
                      "audience_conditions": ["or", { "audience_id": 222222 }],
                      "audience_ids": [5340810295],
                      "created_time": "2021-02-03 19:57:31.357168+00:00",
                      "description": "",
                      "distribution_mode": "stats_accelerator",
                      "enabled": true,
                      "id": 1,
                      "key": "landing_page_callout",
                      "layer_experiment_id\"": 9000000010002,
                      "layer_id\"": 9000000010002,
                      "metrics": [
                        {
                          "aggregator": "sum",
                          "display_title": "Increasing Revenue by Session",
                          "event_id": 33333333,
                          "event_type": "custom",
                          "field": "revenue",
                          "scope": "session",
                          "winning_direction": "increasing"
                        }
                      ],
                      "name": "Landing Page Callout",
                      "percentage_included": 5000,
                      "type": "a/b",
                      "updated_time": "2021-02-03 19:57:31.357173+00:00",
                      "urn": "rules.flags.optimizely.com::1",
                      "variations": {
                        "false": {
                          "key": false,
                          "name": false,
                          "percentage_included": 5000
                        },
                        "true": {
                          "key": true,
                          "name": true,
                          "percentage_included": 5000
                        }
                      }
                    },
                    "paid_users": {
                      "allow_list": {
                        "xyz123": {
                          "user_id": "xyz123",
                          "variation": { "key": false, "name": false }
                        }
                      },
                      "archived": false,
                      "audience_conditions": ["or", { "audience_id": 123456 }],
                      "audience_ids": [123456],
                      "created_time": "2021-02-03 19:57:31.366368+00:00",
                      "description": "",
                      "enabled": true,
                      "id": 2,
                      "key": "paid_users",
                      "layer_experiment_id\"": 9000000010003,
                      "layer_id\"": 9000000010003,
                      "metrics": [],
                      "name": "Paid Users",
                      "percentage_included": 10000,
                      "type": "targeted_delivery",
                      "updated_time": "2021-02-03 19:57:31.366372+00:00",
                      "urn": "rules.flags.optimizely.com::2",
                      "variations": {
                        "true": {
                          "key": true,
                          "name": true,
                          "percentage_included": 10000
                        }
                      }
                    }
                  },
                  "update_url": "...",
                  "updated_time": "2019-05-08 00:00:00+00:00",
                  "url": "...",
                  "urn": "rulesets.flags.optimizely.com::23456746"
                },
                "schema": { "$ref": "#/components/schemas/Ruleset" }
              }
            },
            "description": "Successful enabling of the Ruleset.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Enable the Ruleset for a Flag in an Environment",
        "tags": ["Rulesets"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/variable_definitions": {
      "get": {
        "operationId": "list_variable_definitions",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" },
          { "$ref": "#/components/parameters/perPage" },
          { "$ref": "#/components/parameters/pageNumber" },
          { "$ref": "#/components/parameters/pageToken" },
          { "$ref": "#/components/parameters/pageWindow" },
          {
            "description": "Sort the Variable Definitions based on the attributes from left to right.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "items": {
                "enum": ["key:asc", "key:desc", "type:asc", "type:desc"],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VariableDefinitions" }
              }
            },
            "description": "Successful retrieval of a page of Variable Definitions for a Flag.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links and pagination metadata.\nObjects in this API MAY include a url property for a link to itself and MAY append _url to properties for related links.\nIf a link is not present in the response, it indicates a user is not authorized to access the related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "Fetch all variable definitions for flag.",
        "tags": ["Variable Definitions"]
      },
      "patch": {
        "description": "Update one or more Variable Definitions in a project using a json patch structure.\n\nProperties that are readOnly that are present in the request body will be ignored as well as\nunknown properties.\n",
        "operationId": "update_variable_definitions",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "example": [
                {
                  "op": "replace",
                  "path": "/variable_definition_key/description",
                  "value": "a new description"
                }
              ],
              "schema": {
                "items": { "$ref": "#/components/schemas/PatchRequestBody" },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VariableDefinitions" }
              }
            },
            "description": "Successful update of one or more Variable Definitiona for a Flag.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Update Variable Definitions",
        "tags": ["Variable Definitions"]
      },
      "post": {
        "description": "Create Variable Definition\n",
        "operationId": "create_variable_definition",
        "parameters": [
          { "$ref": "#/components/parameters/flagKey" },
          { "$ref": "#/components/parameters/projectId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "default_value": "my_default_str",
                "description": "some description",
                "key": "variable_definition_key",
                "type": "string"
              },
              "schema": { "$ref": "#/components/schemas/VariableDefinition" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "default_value": "my_default_str",
                  "description": "some description",
                  "key": "variable_definition_key",
                  "type": "string"
                },
                "schema": { "$ref": "#/components/schemas/VariableDefinition" }
              }
            },
            "description": "Create a variable definition\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Create Variable Definition",
        "tags": ["Variable Definitions"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/variable_definitions/brainstorm": {
      "post": {
        "operationId": "brainstorm_variable_definitions",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrainstormVariablesChat"
              }
            }
          },
          "description": "Input data for AI to brainstorm variable definitions.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrainstormVariablesChat"
                }
              }
            },
            "description": "Successful AI brainstorming of variable definitions.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "Brainstorm variable definitions using AI.",
        "tags": ["Variable Definitions"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/variable_definitions/{variable_definition_key}": {
      "delete": {
        "description": "Permanently delete a Variable Definition for a Flag.\nThere will be no way to access this data after deletion.\n",
        "operationId": "delete_variable_definition",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" },
          { "$ref": "#/components/parameters/variableDefinitionKey" }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Delete a Variable Definition",
        "tags": ["Variable Definitions"]
      },
      "get": {
        "operationId": "fetch_variable_definition",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" },
          { "$ref": "#/components/parameters/variableDefinitionKey" }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VariableDefinition" }
              }
            },
            "description": "Successful retrieval of a single of Variable Definition for a Flag, and Variable Definition Key.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "Fetch a single variable definition by its key.",
        "tags": ["Variable Definitions"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/variations": {
      "get": {
        "description": "Get a list of Variations for a specific Flag in a Project\n\nYou can use query parameters to filter/sort the response.\n",
        "operationId": "list_variations",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" },
          { "$ref": "#/components/parameters/perPage" },
          { "$ref": "#/components/parameters/pageToken" },
          { "$ref": "#/components/parameters/pageWindow" },
          {
            "allowReserved": true,
            "description": "Sort the Variations based on the attributes from left to right.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "name:asc",
                  "name:desc",
                  "key:asc",
                  "key:desc",
                  "created_time:asc",
                  "created_time:desc",
                  "updated_time:asc",
                  "updated_time:desc"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filter the Variations for a Flag by archived field status. A Variation for a Flag can be either archived (archived=true) or unarchived (archived=false)\n",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Filter the Variations for a Flag by enabled field status. A Variation for a Flag can be either enabled (enabled=true) or disabled (enabled=false)\n",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Filter the Variations for a Flag by whether the variation is used (in_use=true) or not (in_use=false) in rules.\n",
            "in": "query",
            "name": "in_use",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Filter the Variations for a Flag by name, key, or\ndescription substring\n",
            "in": "query",
            "name": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Variations" }
              }
            },
            "description": "Successful retrieval of a page of Variations for a Flag.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links and pagination metadata.\nObjects in this API MAY include a url property for a link to itself and MAY append _url to properties for related links.\nIf a link is not present in the response, it indicates a user is not authorized to access the related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "List Variations",
        "tags": ["Variations"]
      },
      "patch": {
        "description": "Update one or more Variations for a specific Flag in a project using a JSON patch structure.\n",
        "operationId": "update_variations",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "example": [
                {
                  "op": "replace",
                  "path": "/high_discount/variables/amount/value",
                  "value": 15
                }
              ],
              "schema": {
                "items": { "$ref": "#/components/schemas/PatchRequestBody" },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "high_discount": {
                    "archive_url": "...",
                    "archived": true,
                    "created_time": "2019-05-08 00:00:00+00:00",
                    "delete_url": "...",
                    "description": "Use this to provide high discounts",
                    "enabled": true,
                    "environment_usage_count": {
                      "development": 2,
                      "production": 3
                    },
                    "fetch_flag_url": "...",
                    "flag_key": "recurring_deposit",
                    "id": 45633995,
                    "key": "high_discount",
                    "name": "High Discount",
                    "unarchive_url": "...",
                    "update_url": "...",
                    "updated_time": "2019-05-08 00:00:00+00:00",
                    "url": "...",
                    "urn": "variations.flag.optimizely.com::45633995",
                    "variables": {
                      "advanced": {
                        "key": "advanced",
                        "type": "json",
                        "value": "{\n\t\"hello\": 123\n}"
                      },
                      "amount": {
                        "key": "amount",
                        "type": "double",
                        "value": 15
                      },
                      "message": {
                        "key": "message",
                        "type": "string",
                        "value": "Enjoy!!"
                      }
                    }
                  },
                  "low_discount": {
                    "low_discount": {
                      "archive_url": "...",
                      "archived": false,
                      "created_time": "2019-05-08 00:00:00+00:00",
                      "delete_url": "...",
                      "description": "Use this to provide low discounts",
                      "enabled": true,
                      "environment_usage_count": {
                        "development": 2,
                        "production": 3
                      },
                      "fetch_flag_url": "...",
                      "flag_key": "recurring_deposit",
                      "id": 45633995,
                      "key": "low_discount",
                      "name": "Low Discount",
                      "unarchive_url": "...",
                      "update_url": "...",
                      "updated_time": "2019-05-08 00:00:00+00:00",
                      "url": "...",
                      "urn": "variations.flag.optimizely.com::45633995",
                      "variables": {
                        "advanced": {
                          "key": "advanced",
                          "type": "json",
                          "value": "{\n\t\"hello\": 123\n}"
                        },
                        "amount": {
                          "key": "amount",
                          "type": "double",
                          "value": 2
                        },
                        "message": {
                          "key": "message",
                          "type": "string",
                          "value": "Enjoy!!"
                        }
                      }
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/VariationMap" }
              }
            },
            "description": "Successful update of Variations for a Flag.\nResponse is a dictionary of variation_key (key) and Variation for a Flag (value)\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Update Variations",
        "tags": ["Variations"]
      },
      "post": {
        "description": "Creates a new Variation for a specific Flag in a project.\n\nThis operation corresponds to the `create_url` in a Variations response.\n\nRequired properties must be present in the request body.\n",
        "operationId": "create_variation",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/VariationRequest"
        },
        "responses": {
          "201": { "$ref": "#/components/responses/VariationSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "Create a New Variation",
        "tags": ["Variations"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/variations/archived": {
      "post": {
        "description": "Archive one or more Variations for a Flag.\n\nThis operation corresponds to the `archive_url` in a Variations response.\n",
        "operationId": "archive_variations",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": { "keys": ["high_discount"] },
              "schema": {
                "$ref": "#/components/schemas/BulkOperationsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "high_discount": {
                    "archive_url": "...",
                    "archived": true,
                    "created_time": "2019-05-08 00:00:00+00:00",
                    "delete_url": "...",
                    "description": "Use this to provide high discounts",
                    "enabled": true,
                    "environment_usage_count": {
                      "development": 2,
                      "production": 3
                    },
                    "fetch_flag_url": "...",
                    "flag_key": "recurring_deposit",
                    "id": 45633995,
                    "key": "high_discount",
                    "name": "High Discount",
                    "unarchive_url": "...",
                    "update_url": "...",
                    "updated_time": "2019-05-08 00:00:00+00:00",
                    "url": "...",
                    "urn": "variations.flag.optimizely.com::45633995",
                    "variables": {
                      "advanced": {
                        "key": "advanced",
                        "type": "json",
                        "value": "{\n\t\"hello\": 123\n}"
                      },
                      "amount": {
                        "key": "amount",
                        "type": "double",
                        "value": 10
                      },
                      "message": {
                        "key": "message",
                        "type": "string",
                        "value": "Enjoy!!"
                      }
                    }
                  },
                  "low_discount": {
                    "low_discount": {
                      "archive_url": "...",
                      "archived": false,
                      "created_time": "2019-05-08 00:00:00+00:00",
                      "delete_url": "...",
                      "description": "Use this to provide low discounts",
                      "enabled": true,
                      "environment_usage_count": {
                        "development": 2,
                        "production": 3
                      },
                      "fetch_flag_url": "...",
                      "flag_key": "recurring_deposit",
                      "id": 45633995,
                      "key": "low_discount",
                      "name": "Low Discount",
                      "unarchive_url": "...",
                      "update_url": "...",
                      "updated_time": "2019-05-08 00:00:00+00:00",
                      "url": "...",
                      "urn": "variations.flag.optimizely.com::45633995",
                      "variables": {
                        "advanced": {
                          "key": "advanced",
                          "type": "json",
                          "value": "{\n\t\"hello\": 123\n}"
                        },
                        "amount": {
                          "key": "amount",
                          "type": "double",
                          "value": 2
                        },
                        "message": {
                          "key": "message",
                          "type": "string",
                          "value": "Enjoy!!"
                        }
                      }
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/VariationMap" }
              }
            },
            "description": "Successful archive of a Variations.\nResponse is a dictionary of variation_key (key) and Variation for a Flag (value)\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Archive Variations",
        "tags": ["Variations"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/variations/brainstorm": {
      "post": {
        "operationId": "brainstorm_variations",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrainstormVariationsChat"
              }
            }
          },
          "description": "Input data for AI to brainstorm variations.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrainstormVariationsChat"
                }
              }
            },
            "description": "Successful AI brainstorming of variations.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "Brainstorm variations definitions using AI.",
        "tags": ["Variations"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/variations/unarchived": {
      "post": {
        "description": "Unarchive one or more Variations for a Flag.\n\nThis operation corresponds to the `unarchive_url` in a Variations response.\n",
        "operationId": "unarchive_variations",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": { "keys": ["high_discount"] },
              "schema": {
                "$ref": "#/components/schemas/BulkOperationsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "high_discount": {
                    "archive_url": "...",
                    "archived": false,
                    "created_time": "2019-05-08 00:00:00+00:00",
                    "delete_url": "...",
                    "description": "Use this to provide high discounts",
                    "enabled": true,
                    "environment_usage_count": {
                      "development": 2,
                      "production": 3
                    },
                    "fetch_flag_url": "...",
                    "flag_key": "recurring_deposit",
                    "id": 45633995,
                    "key": "high_discount",
                    "name": "High Discount",
                    "unarchive_url": "...",
                    "update_url": "...",
                    "updated_time": "2019-05-08 00:00:00+00:00",
                    "url": "...",
                    "urn": "variations.flag.optimizely.com::45633995",
                    "variables": {
                      "advanced": {
                        "key": "advanced",
                        "type": "json",
                        "value": "{\n\t\"hello\": 123\n}"
                      },
                      "amount": {
                        "key": "amount",
                        "type": "double",
                        "value": 10
                      },
                      "message": {
                        "key": "message",
                        "type": "string",
                        "value": "Enjoy!!"
                      }
                    }
                  },
                  "low_discount": {
                    "low_discount": {
                      "archive_url": "...",
                      "archived": false,
                      "created_time": "2019-05-08 00:00:00+00:00",
                      "delete_url": "...",
                      "description": "Use this to provide low discounts",
                      "enabled": true,
                      "environment_usage_count": {
                        "development": 2,
                        "production": 3
                      },
                      "fetch_flag_url": "...",
                      "flag_key": "recurring_deposit",
                      "id": 45633995,
                      "key": "low_discount",
                      "name": "Low Discount",
                      "unarchive_url": "...",
                      "update_url": "...",
                      "updated_time": "2019-05-08 00:00:00+00:00",
                      "url": "...",
                      "urn": "variations.flag.optimizely.com::45633995",
                      "variables": {
                        "advanced": {
                          "key": "advanced",
                          "type": "json",
                          "value": "{\n\t\"hello\": 123\n}"
                        },
                        "amount": {
                          "key": "amount",
                          "type": "double",
                          "value": 2
                        },
                        "message": {
                          "key": "message",
                          "type": "string",
                          "value": "Enjoy!!"
                        }
                      }
                    }
                  }
                },
                "schema": { "$ref": "#/components/schemas/VariationMap" }
              }
            },
            "description": "Successful unarchive of Variations.\nResponse is a dictionary of variation_key (key) and Variation for a Flag (value)\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Unarchive Variations",
        "tags": ["Variations"]
      }
    },
    "/projects/{project_id}/flags/{flag_key}/variations/{variation_key}": {
      "delete": {
        "description": "Permanently delete a Variation for a Flag.\n\nThere will be no way to access this data after deletion. If you want to\nstop seeing a Variation without deleting it permanently, try archiving\ninstead.\n",
        "operationId": "delete_variation",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" },
          { "$ref": "#/components/parameters/variationKey" }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Delete a Variation",
        "tags": ["Variations"]
      },
      "get": {
        "description": "Fetch a single Variation for a Flag by its key.\n\nThis operation corresponds to the `fetch_variation_url` in a Variations response.\n",
        "operationId": "fetch_variation",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/flagKey" },
          { "$ref": "#/components/parameters/variationKey" }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/VariationSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Fetch a Single Variation",
        "tags": ["Variations"]
      }
    },
    "/projects/{project_id}/groups": {
      "get": {
        "description": "Get a list of exclusion groups within a project\n\nYou can use query parameters to filter/sort the response.\n",
        "operationId": "list_groups",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/perPage" },
          { "$ref": "#/components/parameters/pageToken" },
          { "$ref": "#/components/parameters/pageWindow" },
          {
            "allowReserved": true,
            "description": "Sort the Groups based on the attributes from left to right.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "name:asc",
                  "name:desc",
                  "created_time:asc",
                  "created_time:desc",
                  "updated_time:asc",
                  "updated_time:desc"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filter the Groups by archived. A Group can be either archived (archived=true) or unarchived (archived=false)\n",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Filter the Groups by enabled. A Group can be either enabled (enabled=true) or disabled (enabled=false)\n",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Filter the Groups by the environment\n",
            "in": "query",
            "name": "environment",
            "required": false,
            "schema": {
              "items": { "example": "production", "type": "string" },
              "type": "array"
            }
          },
          {
            "description": "Filter the Groups by name or\ndescription substring\n",
            "in": "query",
            "name": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Ensure that the group id listed is returned first\n",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": { "items": { "type": "string" }, "type": "array" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Groups" }
              }
            },
            "description": "Successful retrieval of a page of Groups.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links and pagination metadata.\nObjects in this API MAY include a url property for a link to itself and MAY append _url to properties for related links.\nIf a link is not present in the response, it indicates a user is not authorized to access the related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "List Exclusion Groups",
        "tags": ["Groups"]
      },
      "patch": {
        "description": "Update one or more Groups in a project using a json patch structure.\n\nProperties that are readOnly that are present in the request body will be ignored as well as\nunknown properties.\n",
        "operationId": "update_groups",
        "parameters": [{ "$ref": "#/components/parameters/projectId" }],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "example": [
                {
                  "op": "replace",
                  "path": "/123/rules/456/traffic_allocation",
                  "value": 8000
                }
              ],
              "schema": {
                "items": { "$ref": "#/components/schemas/PatchRequestBody" },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "987": {
                    "archive_url": "/projects/12345/groups/archived",
                    "archived": false,
                    "created_time": "2019-05-08T00:00:00.000Z",
                    "delete_url": "/projects/12345/groups/456",
                    "description": "Updated description for group",
                    "environment_key": "production",
                    "id": 987,
                    "name": "Promo Group",
                    "project_id": 12345,
                    "rules": {
                      "456": {
                        "created_time": "2022-01-08T00:00:00.000Z",
                        "flag_key": "recurring_revenue",
                        "flag_name": "Recurring REvenue",
                        "flag_status": "unarchived",
                        "rule_key": "experiment_one",
                        "rule_name": "Experiment One",
                        "traffic_allocation": 2000,
                        "updated_time": "2022-01-08T00:00:00.000Z"
                      }
                    },
                    "unarchive_url": "/projects/12345/groups/unarchived",
                    "update_url": "/projects/12345/groups",
                    "updated_time": "2019-05-08T00:00:00.000Z",
                    "url": "/projects/12345/groups/456",
                    "urn": "groups.flag.optimizely.com::987"
                  }
                },
                "schema": { "$ref": "#/components/schemas/GroupMap" }
              }
            },
            "description": "Successful update, archive or unarchive of Groups.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Update Exclusion Groups",
        "tags": ["Groups"]
      },
      "post": {
        "description": "Creates a new exclusion group in a project.\n\nThis operation corresponds to the `create_url` in a Groups response.\n\nRequired properties must be present in the request body.\n\nNote that key for each object in \"rules\" (if provided), must be a stringified\nrule ID.\n",
        "operationId": "create_group",
        "parameters": [{ "$ref": "#/components/parameters/projectId" }],
        "requestBody": { "$ref": "#/components/requestBodies/GroupRequest" },
        "responses": {
          "201": { "$ref": "#/components/responses/GroupSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "Create an Exclusion Group",
        "tags": ["Groups"]
      }
    },
    "/projects/{project_id}/groups/archived": {
      "post": {
        "description": "Archive one or more exclusion groups in a project.\n\nThis operation corresponds to the `archive_url` in a Groups response.\n",
        "operationId": "archive_groups",
        "parameters": [{ "$ref": "#/components/parameters/projectId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": { "keys": ["1, 2"] },
              "schema": {
                "$ref": "#/components/schemas/BulkOperationsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "987": {
                    "archive_url": "/projects/12345/groups/archived",
                    "archived": true,
                    "created_time": "2019-05-08T00:00:00.000Z",
                    "description": "Promo group description",
                    "environment_key": "production",
                    "id": 987,
                    "name": "Promo group",
                    "project_id": 12345,
                    "revision": 1,
                    "rules": {
                      "321": {
                        "created_time": "2022-01-08T00:00:00.000Z",
                        "flag_key": "recurring_revenue",
                        "flag_name": "Recurring REvenue",
                        "flag_status": "unarchived",
                        "rule_key": "experiment_one",
                        "rule_name": "Experiment One",
                        "traffic_allocation": 2000,
                        "updated_time": "2022-01-08T00:00:00.000Z"
                      }
                    },
                    "unarchive_url": "/projects/12345/groups/unarchived",
                    "update_url": "/projects/12345/groups",
                    "updated_time": "2019-05-08T00:00:00.000Z",
                    "url": "/projects/12345/groups/123",
                    "urn": "groups.flag.optimizely.com::987"
                  }
                },
                "schema": { "$ref": "#/components/schemas/GroupMap" }
              }
            },
            "description": "Successful archive of Groups.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Archive Exclusion Groups",
        "tags": ["Groups"]
      }
    },
    "/projects/{project_id}/groups/unarchived": {
      "post": {
        "description": "Unarchive one or more exclusion groups in a project.\n\nThis operation corresponds to the `unarchive_url` in a Groups response.\n",
        "operationId": "unarchive_groups",
        "parameters": [{ "$ref": "#/components/parameters/projectId" }],
        "requestBody": {
          "content": {
            "application/json": {
              "example": { "keys": ["1,2"] },
              "schema": {
                "$ref": "#/components/schemas/BulkOperationsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "987": {
                    "archive_url": "/projects/12345/groups/archived",
                    "archived": false,
                    "created_time": "2019-05-08T00:00:00.000Z",
                    "description": "Promo group description",
                    "environment_key": "production",
                    "id": 987,
                    "name": "Promo group",
                    "project_id": 12345,
                    "revision": 1,
                    "rules": {
                      "321": {
                        "created_time": "2022-01-08T00:00:00.000Z",
                        "flag_key": "recurring_revenue",
                        "flag_name": "Recurring REvenue",
                        "flag_status": "unarchived",
                        "rule_key": "experiment_one",
                        "rule_name": "Experiment One",
                        "traffic_allocation": 2000,
                        "updated_time": "2022-01-08T00:00:00.000Z"
                      }
                    },
                    "unarchive_url": "/projects/12345/groups/unarchived",
                    "update_url": "/projects/12345/groups",
                    "updated_time": "2019-05-08T00:00:00.000Z",
                    "url": "/projects/12345/groups/123",
                    "urn": "groups.flag.optimizely.com::987"
                  }
                },
                "schema": { "$ref": "#/components/schemas/GroupMap" }
              }
            },
            "description": "Successful unarchive of Groups.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Unarchive Exclusion Groups",
        "tags": ["Groups"]
      }
    },
    "/projects/{project_id}/groups/{group_id}": {
      "delete": {
        "description": "Permanently delete an exclusion group by id.\n\nThere will be no way to access this data after deleting. If you want to\nstop seeing a Group without deleting it permanently, archive\ninstead.\n",
        "operationId": "delete_group",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/groupId" }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Delete an Exclusion Group",
        "tags": ["Groups"]
      },
      "get": {
        "description": "Fetch a single exclusion group by its id.\n\nThis operation corresponds to the `fetch_group_url` in a Groups response.\n",
        "operationId": "fetch_group",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/groupId" }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/GroupSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Fetch a Single Exclusion Group",
        "tags": ["Groups"]
      }
    },
    "/projects/{project_id}/holdouts": {
      "get": {
        "description": "(Note: This API endpoint in currently development, and not yet ready for public use.)\n\nCreate, update, or archive a Holdout in a Project.\n",
        "operationId": "list_holdouts",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          {
            "description": "Filter the Holdouts by archived. A Holdout can be either archived (archived=true) or unarchived (archived=false)\n",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "description": "Filter the Holdouts by status. A Holdout can have one of several statuses. (concluded, draft, or running) (Note: To fetch archived statuses, use the archived query parameter set to true)\n",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/components/schemas/Holdout/properties/status"
              },
              "type": "array"
            }
          },
          {
            "description": "Filter the Holdouts by name or description substring\n",
            "in": "query",
            "name": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Sort the Holdouts based on the attributes from left to right.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "items": {
                "enum": [
                  "name:asc",
                  "name:desc",
                  "key:asc",
                  "key:desc",
                  "created_time:asc",
                  "created_time:desc",
                  "status:asc",
                  "status:desc"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HoldoutsPaginatedListSuccessResponse"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "List Holdouts for a project",
        "tags": ["Holdouts"]
      },
      "post": {
        "description": "(Note: This API endpoint in currently development, and not yet ready for public use.) \n\nCreates a new Holdout in a Project.\n\nThis operation corresponds to the `create_url` in a Holdouts response.\n\nRequired properties must be present in the request body.\n",
        "operationId": "create_holdout",
        "parameters": [{ "$ref": "#/components/parameters/projectId" }],
        "requestBody": { "$ref": "#/components/requestBodies/HoldoutRequest" },
        "responses": {
          "201": { "$ref": "#/components/responses/HoldoutSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "Create a new Holdout",
        "tags": ["Holdouts"]
      }
    },
    "/projects/{project_id}/holdouts/{holdout_id}": {
      "delete": {
        "description": "Permanently delete a Holdout by id.\n\nThere will be no way to access this data after deletion. If you want to\nstop seeing a Holdout without deleting it permanently, try archiving\ninstead.\n",
        "operationId": "delete_holdout",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/holdoutId" }
        ],
        "responses": {
          "204": { "$ref": "#/components/responses/NoContentResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Delete a Holdout",
        "tags": ["Holdouts"]
      },
      "get": {
        "description": "(Note: This API endpoint in currently development, and not yet ready for public use.)\n\nFetch a single holdout by its id.\n\nThis operation corresponds to the `fetch_holdout_url` in a Holdout response.\n",
        "operationId": "fetch_holdout",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/holdoutId" }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/HoldoutSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Fetch a single Holdout",
        "tags": ["Holdouts"]
      },
      "post": {
        "description": "(Note: This API endpoint in currently development, and not yet ready for public use.)\n\nUpdate one or more Holdouts in a project using a json patch structure.\n\nProperties that are readOnly that are present in the request body will be ignored as well as\nunknown properties.\n",
        "operationId": "update_holdouts",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/holdoutId" }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "example": [
                { "op": "replace", "path": "/123/holdouts/456", "value": 4 }
              ],
              "schema": {
                "items": { "$ref": "#/components/schemas/PatchRequestBody" },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "987": {
                    "archive_url": "/projects/12345/holdouts/archived",
                    "archived": false,
                    "created_time": "2019-05-08T00:00:00.000Z",
                    "delete_url": "/projects/12345/holdouts/456",
                    "description": "Updated description for holdout",
                    "environment_key": "production",
                    "id": 987,
                    "name": "Promo Group",
                    "project_id": 12345,
                    "rules": {
                      "456": {
                        "created_time": "2022-01-08T00:00:00.000Z",
                        "flag_key": "recurring_revenue",
                        "flag_name": "Recurring REvenue",
                        "flag_status": "unarchived",
                        "rule_key": "experiment_one",
                        "rule_name": "Experiment One",
                        "traffic_allocation": 2000,
                        "updated_time": "2022-01-08T00:00:00.000Z"
                      }
                    },
                    "unarchive_url": "/projects/12345/holdouts/unarchived",
                    "update_url": "/projects/12345/holdouts",
                    "updated_time": "2019-05-08T00:00:00.000Z",
                    "url": "/projects/12345/holdouts/456",
                    "urn": "holdouts.flag.optimizely.com::987"
                  }
                },
                "schema": { "$ref": "#/components/schemas/HoldoutMap" }
              }
            },
            "description": "Successful update, archive or unarchive of Holdouts.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links. If a\nlink is not present in the response, it indicates a user is not authorized to access\nthe related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" },
          "409": { "$ref": "#/components/responses/ConflictResponse" }
        },
        "summary": "Update Holdouts",
        "tags": ["Holdouts"]
      }
    },
    "/projects/{project_id}/rule/{rule_key}/holdouts": {
      "get": {
        "description": "Fetch a list of holdouts for a specific rule_key\n",
        "operationId": "fetch_holdouts_by_rule_key",
        "responses": {
          "200": {
            "$ref": "#/components/responses/HoldoutsListSuccessResponse"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Fetch holdouts for a specific rule_key",
        "tags": ["Rules"]
      },
      "parameters": [
        { "$ref": "#/components/parameters/projectId" },
        { "$ref": "#/components/parameters/ruleKey" }
      ]
    },
    "/projects/{project_id}/rules": {
      "get": {
        "description": "Get a list of Rules within a Project\n\nYou can use query parameters to filter/sort the response.\n",
        "operationId": "list_all_rules_in_project",
        "parameters": [
          { "$ref": "#/components/parameters/projectId" },
          { "$ref": "#/components/parameters/perPage" },
          { "$ref": "#/components/parameters/pageToken" },
          { "$ref": "#/components/parameters/pageWindow" },
          {
            "description": "Filter the rules by rule type. A rule type can be A/B test, MAB etc.,\n",
            "in": "query",
            "name": "rule_types",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Filter the Rules by Environment. An Environment can be development, production etc.,\n",
            "in": "query",
            "name": "environments",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "description": "Filter the Environments by archived. An Environment can be either archived (archived=true) or unarchived (archived=false)\n",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "allowReserved": true,
            "description": "Sort the Environments based on the attributes from left to right.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "name:asc",
                  "name:desc",
                  "key:asc",
                  "key:desc",
                  "created_time:asc",
                  "created_time:desc",
                  "updated_time:asc",
                  "updated_time:desc"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Rules" }
              }
            },
            "description": "Successful retrieval of a page of rules.\n\nThe response includes RESTful JSON (https://restfuljson.org/) styled links and pagination metadata.\nObjects in this API MAY include a url property for a link to itself and MAY append _url to properties for related links.\nIf a link is not present in the response, it indicates a user is not authorized to access the related resource.\n"
          },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" }
        },
        "summary": "List Rules",
        "tags": ["Rules"]
      }
    },
    "/projects/{project_id}/rules/{experiment_id}": {
      "get": {
        "description": "Fetch a Rule for a specific experiment_id\n",
        "operationId": "fetch_rule_by_experiment_id",
        "responses": {
          "200": { "$ref": "#/components/responses/RuleSuccessResponse" },
          "400": { "$ref": "#/components/responses/BadRequestResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedResponse" },
          "403": { "$ref": "#/components/responses/ForbiddenResponse" },
          "404": { "$ref": "#/components/responses/NotFoundResponse" }
        },
        "summary": "Fetch a Rule for a specific experiment_id",
        "tags": ["Rules"]
      },
      "parameters": [
        { "$ref": "#/components/parameters/projectId" },
        { "$ref": "#/components/parameters/experimentId" }
      ]
    }
  },
  "security": [{ "apiKey": [] }, { "OAuth2": ["read", "write"] }],
  "servers": [{ "url": "https://api.optimizely.com/flags/v1" }],
  "tags": [
    { "description": "APIs to list Environments", "name": "Environments" },
    { "description": "APIs to interact with Flags", "name": "Flags" },
    { "description": "APIs to interact with Reports", "name": "Reports" },
    { "description": "APIs to interact with Rulesets", "name": "Rulesets" },
    { "description": "APIs to interact with Rules", "name": "Rules" },
    { "description": "APIs to interact with Variations", "name": "Variations" },
    {
      "description": "APIs to interact with mutual exclusion groups",
      "name": "Groups"
    },
    {
      "description": "APIs to interact with Variable Definitions",
      "name": "Variable Definitions"
    }
  ],
  "x-readme": { "explorer-enabled": true, "proxy-enabled": true }
}
